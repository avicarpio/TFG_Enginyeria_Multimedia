#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{listings}

\usepackage{xcolor}

\usepackage{url}
\usepackage{breakurl}

\usepackage[english]{babel}

\usepackage{hyperref}
\def\UrlBreaks{\do\/\do-}

\newfontfamily\firaCode[Extension=.ttf]{FiraCode}

\definecolor{codeColor}{RGB}{50, 180, 50}

\lstset{basicstyle=\fontsize{8}{9}\selectfont\firaCode,
  showstringspaces=false,
  commentstyle=\color{codeColor},
  keywordstyle=\color{blue}
}

\urlstyle{same}

\sloppy

\renewcommand{\contentsname}{Índex}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language catalan
\language_package none
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command makeindex
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Treball Final de Grau Àlex Vicente"
\pdf_author "Àlex Vicente"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 10 4
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
CREACIÓ D'UNA APLICACIÓ 
\begin_inset Newline newline
\end_inset

DE LIVE VIDEO MIXING AL NÚVOL,
\begin_inset Newline newline
\end_inset

UTILITZANT TECNOLOGIA DE VIDEOJOCS
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/LogoLaSalle
	lyxscale 20
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center
Treball Final de Grau Universitat la Salle URL Barcelona
\begin_inset Newline newline
\end_inset

Enginyeria Multimèdia - Menció en Videojocs
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Standard
\align center
realitzat per
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Àlex Vicente Carpio
\series default

\begin_inset Newline newline
\end_inset

Departament d'Enginyeria Multimèdia
\end_layout

\begin_layout Standard
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center
Tutor
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.4cm
\end_inset


\end_layout

\begin_layout Standard
\align center
Gabriel Fernández Ubiergo
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\size huge
Resum
\series default
\size default

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El sector audiovisual és un dels àmbits que evolucionen dia a dia a causa
 dels avenços de les noves tecnologies, gràcies a això, la possibilitat
 de crear produccions audiovisuals de gran qualitat a temps real ja és una
 realitat.
 Però per a això és necessari l'ús de maquinari amb la potència suficient
 per dur a terme aquesta possibilitat i d'un personal amb coneixements elevats
 sobre el tema.
 En aquest projecte volem crear una aplicació innovadora amb la qual qualsevol
 usuari pugui crear composicions extraordinàries.
 Per a això, farem servir sobretot el nostre enginy, ja que no existeix
 cap aplicació que avui en dia hagi aconseguit semblant gesta anteriorment.
 Entrarem en l'ús de tècniques innovadores per al món audiovisual i que
 com a primera impressió poden no semblar relacionades per al cas.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'objectiu principal és crear una aplicació de live video mixing en el núvol,
 això vol dir que no fan falta recursos de la màquina local, de manera que
 es podrà treballar amb qualsevol ordinador per molt antic i senzill que
 sigui, per crear unes composicions de qualitat amb vídeos d'alta resolució
 treballant de manera totalment 
\begin_inset Quotes fld
\end_inset

live
\begin_inset Quotes frd
\end_inset

.
 Tot això, en temps real amb un retard mínim del vídeo a la sortida.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Paraules clau: 
\series default
Audiovisual, núvol, remot, escalable, vídeo, còdecs, Linux, servidor.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
\size huge
Resumen
\series default
\size default

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El sector audiovisual es uno de los ámbitos que evolucionan dia a dia debido
 a los avances de las nuevas tecnologías, gracias a esto, la posibilidad
 de crear producciones audiovisuales de gran calidad a tiempo real ya es
 una realidad.
 Pero para ello es necesario el uso de hardware con la potencia suficiente
 para llevar a cabo esta posibilidad y de un personal con conocimientos
 eleveados sobre el tema.
 En este proyecto queremos crear una aplicación innovadora con la que cualquier
 usuario pueda crear composiciones extraordinarias.
 Para ello, usaremos sobretodo nuestro ingenio, ya que no existe ninguna
 aplicación que hoy en dia haya conseguido semejante hazaña anteriormente.
 Entraremos en el uso de técnicas innovadoras para el mundo audiovisual
 y que como primera impresión pueden no parecer relacionadas para el caso.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El objetivo principal es crear una aplicación de live video mixing en la
 nube, eso significa que no se usarán recursos de la máquina local, por
 lo que se podrá trabajar con cualquier ordenador por muy antiguo y sencillo
 que sea, para crear unas composiciones de calidad con vídeos de alta resolución
 trabajando de manera totalmente 
\begin_inset Quotes fld
\end_inset

live
\begin_inset Quotes frd
\end_inset

.
 Todo esto, en tiempo real con un retardo mínimo del video en la salida.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Palabras clave: 
\series default
Audiovisual, nube, remoto, escalable, video, códecs, Linux, servidor.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\series bold
\size huge
Abstract
\series default
\size default

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The audiovisual sector is one of the areas that evolve day by day due to
 the advances of new technologies, thanks to this, the possibility of creating
 high quality audiovisual productions in real time is now a reality.
 But this requires the use of hardware with sufficient power to carry out
 this possibility and a staff with elevated knowledge on the subject.
 In this project we want to create an innovative application with which
 any user can create extraordinary compositions.
 To do this, we will use our ingenuity, since there is no application today
 that has achieved such a feat before.
 We will enter into the use of innovative techniques for the audiovisual
 world and that as a first impression may not seem related to the case.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The main objective is to create a live video mixing application in the cloud,
 that means that no local machine resources will be used, so you can work
 with any computer, no matter how old and simple it is, to create quality
 compositions with high resolution videos in a completely live way.
 All of this, in real time with a minimum delay of the video at the output.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Keywords: 
\series default
Audiovisual, cloud, remote, scalable, video, codecs, Linux, server.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Introducció}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'evolució de les tecnologies en el sector multimèdia és imparable, cada
 cop tenim a la nostra disposició més serveis de streaming, 
\begin_inset Quotes fld
\end_inset

video on demand
\begin_inset Quotes frd
\end_inset

 i eines de producció molt professionals a l'abast de qualsevol tipus d'usuari.
 I a la vegada, la demanda per aquest tipus d'eines també creix, ja que
 la gent s'interessa en donar-se a conèixer, retransmetre conferències,
 entretenir, i ho volen fer amb la major qualitat possible.
 El gran problema és que no tothom disposa d'una màquina amb els recursos
 suficients per suportar eines de producció de vídeo tant potents, o dels
 coneixements tècnics necessaris per utilitzar-los.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Partint d'aquesta base, s'ha marcat com a objectiu principal d'aquest projecte
 crear una aplicació de live video mixing usant tecnologies alternatives,
 amb els punts clau: remot, escalable, senzill i potent.
 Es vol posar a disposició de qualsevol usuari, una eina al núvol capaç
 d'aconseguir uns resultats equivalents o superiors a les eines de vídeo
 més professionals.
 Al estar executada al núvol, vol dir que no s'utilitzaran recursos de la
 màquina local, per tant qualsevol tipus d'ordinador, per molt simple o
 antic que sigui, podrà treballar amb vídeos d'alta qualitat i realitzar
 composicions extraordinàries.
 En resum, es vol crear una aplicació multimèdia amb la que poder gestionar
 fluxos de vídeo d'entrada i de sortida, combinant-los i gestionant-los
 d'una manera senzilla, eficaç i ràpida.
 Durant el transcurs d'aquest treball, s'anirà veient que hi ha moltes possibili
tats per dur a terme l'objectiu, es plantejaran totes elles, es compararan,
 i s'escollirà la que més s'adeqüi a les necessitats.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Aquest projecte ha estat realitzat a l'empresa Watchity S.L., on he estat
 treballant com a becari, i a la vegada ho he combinat amb el meu treball
 final de grau.
 Ja que es tracta d'una idea molt interessant i innovadora, que em va cridar
 molt l'atenció des de el primer moment.
 En aquesta empresa ja disposen d'una eina al núvol per tractar vídeo, porten
 anys treballant amb ella i han comprovat que la demanda per aquest tipus
 d'eines és real, pel que volen evolucionar el sistema i donar més possibilitats
 d'edició.
 Actualment tenen una aplicació basada en una eina anomenada Snowmix que
 té les seves limitacions.
 La quantitat de vídeos amb la que es pot treballar és limitat, estàs lligat
 a un programari que no controles i els efectes que es poden aplicar sobre
 els vídeos són massa senzills.
 Durant el projecte s'analitzarà l'aplicació actual, es compararà i es decidiran
 uns requisits indispensables pel seu successor.
 Aquesta és una de les raons per la qual es van plantejar contractar un
 becari que refés el sistema des de un altre punt de vista totalment diferent.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En el mercat existeixen algunes altres propostes.
 Com a exemples de competència tenim vMix o Wirecast, com a software instal·labl
e, que fan vídeo mixing professional, pel que es requereixen uns coneixements
 tècnics sobre el món audiovisual.
 Per altre banda tindríem StreamYard o Restream que fan vídeo mixing al
 núvol, però llavors es queden bastant limitats, no es permet gaire control
 sobre l'escena, no tenen gaires efectes que donin un toc elegant i es nota
 a simple vista que s'està usant una eina que no és professional.
 I és aquí on Watchity vol incidir com a una proposta diferencial, creant
 una eina potent al núvol totalment remota i a la vegada, potent.
\end_layout

\begin_layout Standard
Alguns exemples de les empreses/entitats que ja han treballat anteriorment
 amb Watchity són: 
\emph on
el Correo Gallego
\emph default
, 
\emph on
l'Oréal
\emph default
, 
\emph on
Generalitat de Catalunya
\emph default
, 
\emph on
Honda
\emph default
...
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Part Teòrica}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Explicació del projecte}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Projecte Actual}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Arquitectura Global
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El primer que s'ha d'explicar, és la arquitectura del sistema actual de
 l'empresa Watchity, abans de començar amb el nou.
 Tenen a disposició dels clients, diferents eines de vídeo, les més importants
 són: 
\end_layout

\begin_layout Itemize

\series bold
Cut & Share
\series default
, serveix per crear petits vídeos fàcilment, a partir d'altres més llargs,
 i poder-los compartir d'una manera senzilla i còmode.
 
\begin_inset CommandInset citation
LatexCommand cite
key "ControlRoom"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Per últim tenim el 
\series bold
Mixer
\series default
 que és en el que ens centrarem al transcurs d'aquest projecte.
 Aquest disposa d'un sistema de 
\shape italic
Live Video Mixing 
\emph on
que es compon del frontend, i el backend.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Mixer"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Control Room
\series default
, és una eina que serveix per controlar fluxos de vídeo i distribuir-los
 a diferents xarxes socials.
 
\begin_inset CommandInset citation
LatexCommand cite
key "ControlRoom"
literal "false"

\end_inset


\end_layout

\begin_layout Standard

\shape italic
\emph on
En el Mixer trobem una aplicació controlada per navegador que té totes les
 opcions bàsiques per fer una edició en viu dels vídeos.
 Però, té algunes limitacions, com poden ser: un màxim de 15 capes de vídeos
 o imatges, no té cap tipus de compatibilitat amb elements 3D, una resolució
 de 720p al output, no disposa de control per guardar/carregar, limitació
 de potència per fluxos de streaming simultanis, poques possibilitats de
 transicions, no disposa de cap eina per afegir efectes ni de vídeo, ni
 de so (per exemple, chroma key o reverb, respectivament), impossibilitat
 per treballar a resolucions de 4K o més.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/FrontendMixer.png
	width 10cm
	height 10cm
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Esquema de la producció Watchity
\begin_inset CommandInset label
LatexCommand label
name "fig:Frontend-Mixer"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir d'això, es genera un streaming de sortida en WebRTC que es pot
 visualitzar al navegador de l'usuari.
 A la vegada, es genera un streaming RTMP, que s'emet automàticament a totes
 les xarxes socials que l'usuari desitgi (Facebook, Youtube, Instagram,
 etc.)
\end_layout

\begin_layout Standard
En quant al backend, s'ocupa de realitzar les tasques demanades des de el
 frontend explicat anteriorment.
 A més de controlar les diferents configuracions com poden ser la transcodificac
ió dels vídeos, configuració dels vídeos...
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Requeriments del nou Mixer}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Degut a les limitacions del sistema actual, es proposa una sèrie de requisits
 que el nou Mixer haurà de tenir, assegurant-nos que compleixi amb les expectati
ves i sigui útil per dur a terme aquesta 
\begin_inset Quotes eld
\end_inset

evolució
\begin_inset Quotes erd
\end_inset

.
 És possible que el producte final acabi tenint més funcionalitats de les
 que s'esmenten a continuació, però sí que reflexa les més bàsiques.
\end_layout

\begin_layout Itemize
Poder injectar un 
\series bold
flux de streaming
\end_layout

\begin_layout Itemize
Poder injectar un vídeo 
\series bold
preenregistrat (local)
\end_layout

\begin_layout Itemize
Tot tipus d'elements s'han de poder inserir amb 
\series bold
posicions i paràmetres inicials
\end_layout

\begin_layout Itemize
Injecció d'
\series bold
imatges
\series default
 amb transparència, a més de permetre el canal 
\series bold
alpha
\end_layout

\begin_layout Itemize
Serà necessari que es puguin definir 
\series bold
escenes
\series default
, les quals també puguin emmagatzemar les posicions dels elements dins de
 cada una i totes les seves propietats.
\end_layout

\begin_layout Itemize

\series bold
Mute
\series default
/un-mute de cada font d'entrada
\end_layout

\begin_layout Itemize
Control de volum de cada font d'entrada
\end_layout

\begin_layout Itemize
Mixing de les fonts no silenciades
\end_layout

\begin_layout Itemize
Control de volum de la sortida mesclada
\end_layout

\begin_layout Itemize
Mute/un-mute de la sortida mesclada
\end_layout

\begin_layout Itemize
Possibilitat de tenir fins a 
\series bold
6 fonts 
\series default
de streaming 
\series bold
simultàniament
\end_layout

\begin_layout Itemize

\series bold
Chroma-keying
\series default
 a les fonts de vídeo (streams o local)
\end_layout

\begin_layout Itemize
Els flux d'entrada poden tenir 
\series bold
diferents resolucions
\end_layout

\begin_layout Itemize
Extreure el render final via streaming (
\series bold
rtp
\series default
 o similar)
\end_layout

\begin_layout Itemize
Poder definir la resolució i framerate del render final (720p/25fps, 720p/30fps,
 1080p/30fps, etc.)
\end_layout

\begin_layout Itemize
Poder canviar d'un element a un altre tant per 
\series bold
tall
\series default
 com per 
\series bold
dissolve
\end_layout

\begin_layout Itemize
Possibilitat de treballar fins a 
\series bold
4K
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Encara que hi han alguns elements que primera vista poden semblar que es
 poden reutilitzar, no és així, ja que la idea es canviar totalment el sistema
 des de la base, utilitzant un altre tipus de software totalment diferent,
 veient que l'actual està molt limitat.
 Per tant, s'ha decidit no utilitzar res de l'anterior projecte i crear-ho
 tot des de zero.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Eines Gràfiques}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuació es presentaran les eines gràfiques que podrien servir per
 aconseguir l'objectiu.
 Totes elles són ben conegudes, pel que ens assegurem una estabilitat i
 suport del programari.
 A més de tenir en totes una constant evolució, que podria ajudar a fer
 créixer el projecte a mida que va passant el temps, per evitar que es quedi
 estancat.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Headless Chrome}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Vanilla
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La primera opció que es va proposar va ser utilitzar Headless Chrome.
 A partir de la versió 59 de Chrome (actualment està per la versió 90),
 és possible executar-lo de manera 
\shape italic
headless
\shape default
, el que significa que es pot utilitzar des de terminal, o més interessant,
 des de un servidor sense cap tipus de UI.
 Es va crear pensant en que podria ser molt útil, per fer testos automatitzats
 de webs o aplicacions online.
\begin_inset Newline newline
\end_inset

Per executar-lo és molt fàcil, només cal afegir uns quants paràmetres d'inici
 al Chrome.
 Els paràmetres d'exemple són:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/hchromeconf_1.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=bash,caption={Config Headless Chrome},label={chrome}"

\end_inset


\end_layout

\begin_layout Standard
Encara que està pensat per fer automatitzacions com he comentat abans, es
 pot aprofitar la potència de Chrome per altres tasques, com poden ser la
 reproducció de vídeos, crides a APIs, entre altres.
\end_layout

\begin_layout Standard
Buscant algun exemple per internet que aprofités Headless Chrome per la
 reproducció de vídeo, ens vam trobar amb uns quants que havien pensat el
 mateix.
\end_layout

\begin_layout Standard
En un article 
\begin_inset CommandInset citation
LatexCommand cite
key "HeadlessChromeExp1"
literal "false"

\end_inset

 trobem que van aconseguir fer streaming a Facebook i Youtube Live amb uns
 resultats bastant satisfactoris.
 A partir d'una web (vídeo + àudio), ho convertien a un flux de sortida
 RTMP.
 Comenta que el més complicat va ser aconseguir que el vídeo i l'àudio estiguess
in sincronitzats.
 Però finalment ho va aconseguir gràcies al controlador d'àudio anomenat
 PulseAudio 
\begin_inset CommandInset citation
LatexCommand cite
key "PulseAudio"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Headless Chrome està pensat per ser utilitzat amb alguna eina d'automatització,
 i així ho recomanen des de el propi blog oficial de Google Developers 
\begin_inset CommandInset citation
LatexCommand cite
key "HeadlessChromeDevel"
literal "false"

\end_inset

.
 Degut a que no disposem de cap tipus de UI per debugar o interactuar, utilitzar
em una eina externa.
 Al blog de Google ens parlen de Puppeteer, Selenium, WebDriver i ChromeDriver.
 Totes elles tenen el mateix objectiu, automatitzar tasques al navegador.
 Podríem dir que la més desenvolupada i consolidada, és Selenium, però Puppeteer
 també s'ha guanyat molt de renom en els últims temps, per tant, haurem
 de fer un estudi per veure els pros i contres de cada una i decidir amb
 quina d'aquestes ens quedarem.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Selenium
\series default

\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Standard
Selenium és una eina gratuïta i open-source 
\begin_inset CommandInset citation
LatexCommand cite
key "Selenium"
literal "false"

\end_inset

, que serveix per crear tasques automatitzades en un navegador o aplicació
 per validar funcionalitats.
 Es poden utilitzar scripts tant de C#, Python, JavaScript, PHP, Scala...
 Realment Selenium com a tal és una Suite que es compon d'un grup d'eines;
 el seu propi IDE, Grid i WebDriver.
 Nosaltres estem interessats en l'últim, per tant és el que estudiarem.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Selenium WebDriver pot controlar un navegador tal i com ho faria un usuari,
 ja sigui de manera local o remota en un servidor.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/SeleniumGraph.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Selenium Driver Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:Selenium-Graph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Com podem veure a la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Selenium-Graph"
plural "false"
caps "false"
noprefix "false"

\end_inset

, WebDriver es comunica amb el navegador a través d'un driver.
 Aquest driver és específic de cada navegador.
 El que ens interessa és el de Chrome, per tant sabem que utilitzarem el
 ChromeDriver.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Els navegadors que suporta són: Chrome, Chromium, Firefox, Internet Explorer,
 Opera i Safari.
 A la seva documentació 
\begin_inset CommandInset citation
LatexCommand cite
key "SeleniumDriverDocumentation"
literal "false"

\end_inset

 no comenten en cap lloc compatibilitat amb Headless Chrome, però degut
 a que està basat en el propi navegador, i no fa cap canvi brusc en el seu
 funcionament, podem assegurar que també serà compatible.
 Ho podem corroborar amb un article on ho experimenta 
\begin_inset CommandInset citation
LatexCommand cite
key "SeleniumHeadlessChrome"
literal "false"

\end_inset

, en el que expliquen que només hem d'indicar el driver corresponent a Chrome,
 i escriure a les opcions, el flag 
\begin_inset Quotes fld
\end_inset

–headless
\begin_inset Quotes frd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Puppeteer
\series default

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per altre banda tenim un altre eina bastant més nova, anomenada Puppeteer
 
\begin_inset CommandInset citation
LatexCommand cite
key "Puppeteer"
literal "false"

\end_inset

.
 Les funcionalitats principals venen a ser molt semblants a Selenium, controlar
 totes aquelles coses que podries fer manualment al navegador, fer-ho de
 manera automàtica.
 A més de funcionalitats molt útils com fer captures de pantalla i crear
 PDFs.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/pupeteer.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Puppeteer Logo
\begin_inset CommandInset label
LatexCommand label
name "fig:PupeteerLogo"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El Puppeteer és open-source i està sota la llicència d'Apache 2.0 
\begin_inset CommandInset citation
LatexCommand cite
key "ApacheLicense"
literal "false"

\end_inset

 pel que es pot utilitzar i comercialitzar de manera totalment lliure tot
 aquell contingut que tingui les seves eines.
\end_layout

\begin_layout Standard
A més, és molt fàcil d'instal·lar, ja que només cal instal·lar un paquet
 npm i per utilitzar-lo es fa tot amb javascript mitjançant les comandes
 que disposen a la seva documentació.
 A més de tot això, la major avantatge que té és que està pensat per ser
 utilitzat amb Headless Chrome, dóna moltes facilitats per realitzar totes
 les tasques sense estar veient cap tipus de UI, i a la vegada poder debugar
 de manera còmode i senzilla.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un petit codi d'exemple que ens mostren a la seva documentació per comprovar
 com de fàcil és utilitzar-lo.
 El que fem és afegir Puppeteer al nostre script de js amb require, iniciem
 el navegador en mode headless, obrim el link 
\begin_inset Quotes fld
\end_inset

https://example.com
\begin_inset Quotes frd
\end_inset

, fem una captura i tanquem el navegador.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/puppeteerExample_1.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=Java,caption={Puppeteer Get Started Example},label={puppeteer}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{WebGL Headless}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
WebGL és una API escrita en Javascript utilitzada per la renderització de
 gràfics en 3D al navegador.
 Està basat en la Open Graphics Library (OpenGL), pel que només necessitarem
 que sigui compatible amb aquest 
\begin_inset CommandInset citation
LatexCommand cite
key "WebGLBrowserSupport"
literal "false"

\end_inset

, sense cap altre dependència que podria dificultar la compatibilitat.
 Hem de tenir en compte que encara que el navegador sigui compatible, per
 tota la renderització 3D, per molt mínima que sigui, necessitarem una targeta
 gràfica, Això pot ser un problema ja que es vol executar tot en un model
 al núvol, al donar estabilitat i professionalitat.
 La majoria de gent que utilitza servidors té unes idees bastant diferents
 al que es vol fer aquí, i potser necessiten potència de CPU o molta RAM,
 però no GPU, pel que potser és complicat trobar una màquina remota amb
 la potència suficient que es necessita.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/WebGLAquarium.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemple WebGL
\begin_inset CommandInset label
LatexCommand label
name "fig:WebGLExample"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per una banda aquesta solució és molt atractiva ja que es faria tot el sistema
 des de 0 sense utilitzar cap tipus de dependència, però a la vegada també
 depens de les polítiques o limitacions de potència del navegador.
 Mai serà capaç d'utilitzar tot el rendiment de la màquina, pel que no és
 comparable amb una aplicació standalone.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Unreal Engine 4}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un dels motors gràfics més utilitzats dels últims temps és Unreal Engine.
 Està creat per Epic Games, programat en C++ i amb una potència sorprenent
 que fa que sigui el més utilitzats en projectes foto realistes, o inclús,
 en projectes d'arquitectura.
 Sobretot a partir de 2019, on es van ajuntar amb l'empresa Quixel, dedicada
 entre d'altres coses, a crear 
\begin_inset Quotes fld
\end_inset

megascans
\begin_inset Quotes frd
\end_inset

.
 És una tecnologia que disposa textures amb grans resolucions i qualitats
 sorprenents, però a la vegada molt eficients pel desenvolupament de videojocs.
 Així aconseguint un renderitzat molt realista a temps real, i destacant
 entre els altres motors competidors.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Quixel.jpg
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Captura Quixel Demo Megascan a UE4 (Youtube)
\begin_inset CommandInset label
LatexCommand label
name "fig:QuixelMegascans"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Durant el transcurs del 2021 es llençarà la versió d'Unreal Engine 5, on
 han demostrat que poden inclús superar-se i crear uns entorns sorprenents
 ajuntant la tecnologia que ja havien estat desenvolupant de Quixel, amb
 una nova anomenada Lumen, que controlarà totes les llums i farà ús del
 Ray-Tracing a temps real, també dit RTX a les targetes gràfiques de Nvidia.
 Amb totes aquestes novetats i evolucions tecnològiques que han anat fent
 en els últims anys, és lògic que s'hagin guanyat entre la comunitat el
 nom a millor motor gràfic en quant a qualitat visual 
\begin_inset CommandInset citation
LatexCommand cite
key "UE4BestPhotoEngine"
literal "false"

\end_inset

.
 Però com bé sabem, això no és l'únic que importa.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'Unreal disposa d'un sistema de programació anomenat Blueprints, és una
 metodologia de programació totalment visual i basada en nodes.
 Bàsicament són petites capces que internament tenen trossos de codi en
 C++, els quals ajuntem entrades i sortides.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/BlueprintRotate.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Rotació Programada en Blueprint UE4
\begin_inset CommandInset label
LatexCommand label
name "fig:BlueprintRotate"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Això pot ser molt còmode i és un punt a favor per la gent que comença a
 desenvolupar videojocs, si estàs acostumat a utilitzar-ho o no es tenen
 els coneixements necessaris de programació i vols fer scripts amb una complexit
at baixa-mitjana.
 Però pel contrari si es volen fer scripts més complexes pot ser que ens
 trobem amb certs inconvenients i poden quedar scripts amb milers de nodes
 i que sigui molt difícil d'interpretar o debugar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/BlueprintChaos.jpg
	lyxscale 30
	height 5cm
	BoundingBox 0cm 9mm 1200bp 675bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemple Blueprint Caòtic UE4
\begin_inset CommandInset label
LatexCommand label
name "fig:BlueprintChaos"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Altres inconvenients poden ser que les idees que es tenen surtin fora de
 la norma, que els nodes estiguin massa limitats o que simplement no t'agradi,
 per això també et donen la opció a crear un script buit i fer-ho tot amb
 C++.
 I llavors veiem que la documentació que es pot trobar és molt inferior
 a la dels blueprints, i possiblement sigui més complicat i més llarg de
 fer que els seus competidors, com poden ser Unity o Godot.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Unity}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El motor de videojocs més famós i més utilitzat des de els seus orígens
 és sense dubte Unity 
\begin_inset CommandInset citation
LatexCommand cite
key "PopularUnity"
literal "false"

\end_inset

.
 Va ser creat al 2005 a Copenhaguen per 3 amics, David Helgason, Joachim
 Ante i Nicholas Francis.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
És el motor que suporta més plataformes actualment 
\begin_inset CommandInset citation
LatexCommand cite
key "UnityMultiplatform"
literal "false"

\end_inset

, com Windows, Mac OS, Linux, iOS, Android, WebGL, Playstation, Xbox, Nintendo
 Switch, Stadia i moltes altres més.
 Això és un punt molt a favor, ja que necessitem desenvolupar l'aplicació
 per un servidor Linux, i Unity és el motor més professional dels que donen
 suport.
 Altres motors com Unreal Engine, Game Maker o Cry Engine no accepten el
 sistema operatiu Linux com a opció de compilació, o funcionen amb bastants
 problemes.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La programació dels scripts es fa amb llenguatge C# el qual forma part de
 la plataforma .NET propietària de Microsoft.
 És un llenguatge derivat de C/C++ i és dels més utilitzats juntament amb
 Java.
 Si ens fixem en el rànquing de plataforma TIOBE 
\begin_inset CommandInset citation
LatexCommand cite
key "TIOBE"
literal "false"

\end_inset

, que és una web que s'encarrega d'ordenar els llenguatges de programació
 de més utilitzat a menys, podem veure que en el top 5, tenim els 3 llenguatges
 de C, els quals tenen una base molt semblant.
 Després tindríem Java i Python, tots dos són llenguatges d'alt nivell molt
 senzills i que faciliten molt el flux de programació.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/RankingLanguages.png
	lyxscale 30
	height 5cm
	BoundingBox 0cm 9mm 1200bp 675bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Llenguatges de programació més utilitzats al 2020
\begin_inset CommandInset label
LatexCommand label
name "fig:TiobeRanking"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A més de que Unity utilitzi C# que ja és un llenguatge d'alt nivell de per
 si, s'utilitza la API MonoBehaviour 
\begin_inset CommandInset citation
LatexCommand cite
key "MonoBehaviour"
literal "false"

\end_inset

, que estalvia molta feina i permet fer tasques que a priori són complicades
 o llargues, en pocs minuts i en poques línies.
\end_layout

\begin_layout Standard
MonoBehaviour és la classe base d'on parteixen tots els scripts de Unity.
 Només cal indicar que el nou script s'estén de la API.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/UnityCode.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Unity Code Basic Template},label={unitytemplate}"

\end_inset


\end_layout

\begin_layout Standard
En les últimes versions de Unity, han apostat molt per competir directament
 amb Unreal Engine, en un dels punts que tenien més diferenciats, l'atractiu
 visual hiperrealista.
\end_layout

\begin_layout Standard
Quan Unity va començar, com que era relativament fàcil d'utilitzar i gratis,
 van aparèixer una quantitat immensa de jocs de mòbil creats amb aquest
 motor, pel que es va guanyar una fama errònia, de que aquest motor només
 servia per jocs petits, amb uns gràfics tirant a simples i sense molts
 efectes.
 
\end_layout

\begin_layout Standard
Per tant, al 2019 van llençar amb la seva última actualització, una nova
 funció anomenada HDRP (High Definition Render Pipeline) 
\begin_inset CommandInset citation
LatexCommand cite
key "HDRP"
literal "false"

\end_inset

, la qual millorava tot el sistema del render del motor, aconseguint uns
 resultats que van sorprendre a tota la comunitat, i que no tenien res a
 envejar amb Unreal Engine.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/UnityPhotorealism.jpg
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Captura Book of the Dead Unity Demo HDRP (Youtube)
\begin_inset CommandInset label
LatexCommand label
name "fig:BookOfDead"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A més, podem trobar que el videojoc més realista que s'ha creat mai en quant
 al gènere de FPS (First Person Shooter), van decidir crear-lo amb el motor
 Unity, enlloc d'Unreal, i van aconseguir uns resultats molt bons, fins
 al punt que està considerat el joc amb millors gràfics, creat amb aquest
 motor.
 Es tracta del videojoc 
\shape italic
Escape from Tarkov
\shape default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/eft.jpg
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Captura Escape from Tarkov Pre-Alpha
\begin_inset CommandInset label
LatexCommand label
name "fig:EFTCaptura"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Tractament dels fluxes de video}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Formats Compatibles}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'aplicació haurà de rebre tot tipus de vídeos, de tots els formats possibles,
 entenent formats el conjunt de còdecs i contenidors.
 Primer s'ha de fer un anàlisi dels formats que existeixen i com de populars
 són
\series bold
.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Còdecs
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Hi ha molts tipus de còdecs, però és cert que alguns s'utilitzen molt poc,
 o ja s'han quedat antiquats.
\end_layout

\begin_layout Itemize
H.261: Aquest còdec va ser el primer que es va tornar popular, degut a que
 era el que donava millors resultats en el seu moment.
 Però evidentment, ha passat molt temps i la tecnologia ha evolucionat suficient
 com per deixar aquest còdec antiquat.
\end_layout

\begin_layout Itemize
H.263: Va ser el primer que còdec realment eficient, però a la vegada demanava
 molts recursos de l'ordinador per codificar un vídeo, i a la vegada, per
 reproduir-lo necessitarem una potencia relativament alta.
\end_layout

\begin_layout Itemize
H.264: És el més popular a l'actualitat de manera professional, també conegut
 com MPEG-4 AVC, compta amb una compressió molt alta amb una pèrdua de qualitat
 imperceptible.
 A més de ser molt polivalent al acceptar molts tipus de bit rate d'entrada.
\end_layout

\begin_layout Itemize
H.265: També anomenat HEVC, és el successor del H.264.
 A vegades pot donar uns resultats pitjors al seu predecessor, però sobretot
 pels vídeos en 4K obtenim uns molts millors resultats ja que comprimeix
 molt més obtenint uns resultats de qualitat molt semblants.
 En els vídeos 4K es pot obtenir fins a un 64% de reducció de bit rate en
 comparació amb H.264.
\end_layout

\begin_layout Itemize
MPEG-1: És un còdec bastant antic que ja no s'utilitza, però va ser molt
 utilitzat per discs de dades CD-ROM i inclou compressió tant de vídeo com
 d'àudio.
\end_layout

\begin_layout Itemize
MPEG-2: Dona bons resultats amb el DVD, però requereix pagar llicència per
 poder-lo utilitzar.
\end_layout

\begin_layout Itemize
MPEG-4: S'utilitza molt per contingut de vídeos a la xarxa, ja que té una
 gran compressió de vídeo i àudio, però la qualitat pot baixar al utilitzar
 baixos nivells de bit rate.
\end_layout

\begin_layout Itemize
DivX: Comunament utilitzat per comprimir pel·lícules DVD i famós per impulsar
 la pirateria al voltant de l'any 2000 al permetre comprimir fins a 7 pel·lícule
s en un sol disc DVD 
\begin_inset CommandInset citation
LatexCommand cite
key "DivX"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Contenidors
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Itemize
AVI: Cada cop és menys utilitzat, però a l'anterioritat va ser molt popular
 per la gran compatibilitat de la que disposava en diferents sistemes operatius.
\end_layout

\begin_layout Itemize
MOV: A diferència de l'AVI, aquest còdec creat per Apple, era molt poc o
 gens compatible amb altres sistemes operatius, pel que només s'utilitzava
 amb els seus dispositius.
\end_layout

\begin_layout Itemize
MPG: Són un conjunt de formats, i alguns d'ells han arribat a ser els més
 famosos, sobretot el MPG-4, també anomenat MP4.
 Que té molta qualitat, comparable al MOV, i actualment és pràcticament
 impossible trobar algun ordinador que no sigui capaç de reproduir-lo.
\end_layout

\begin_layout Itemize
WMV: Windows Media Video és un format propietari de Windows, i necessitarem
 reproduir-lo amb el Windows Media Player per aconseguir els millors resultats
 d'aquest.
\end_layout

\begin_layout Itemize
MKV: Acrònim de Matroska, és un format molt utilitzat per emmagatzemar més
 d'un arxiu en un sol.
 Per exemple podem trobar un arxiu MKV que contingui més d'una pista d'àudio
 (per diferents idiomes), alguns arxius de subtítols o inclús diferents
 arxius de vídeo en un sol.
\end_layout

\begin_layout Itemize
FLV: El format de vídeo de Flash Player, que és molt compatible amb tots
 els ordinadors, però cada cop s'està quedant més antiquat.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Els reproductors més famosos, com són VLC, MPV, o MPlayer, accepten tots
 els tipus de còdecs i contenidors, pel que serà necessari i pràcticament
 requisit que l'aplicació també els accepti tots per a que no es quedi enrere.
 Ja sigui creant un reproductor propi, o un basat en llibreries de tercers.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Imatges
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En quant a les imatges, també trobem molts formats diferents i s'haurà de
 tenir en compte per decidir si es podrà donar suport a tots ells, o pel
 contrari s'haurà de prescindir d'algun.
 Com a mínim hauria d'acceptar els més famosos, que són:
\end_layout

\begin_layout Itemize
BMP: Creat per l'empresa Microsoft, és l'estàndard del sistema operatiu
 Windows.
\end_layout

\begin_layout Itemize
JPEG: Un dels formats més utilitzat degut a la seva gran compressió, mantenint
 una qualitat molt acceptable.
\end_layout

\begin_layout Itemize
GIF: El GIF és un format diferent a la resta, ja que consta d'un conjunt
 d'imatges que es reprodueixen de manera continua, formant un petit vídeo.
 Això si, la seva qualitat queda molt limitada.
\end_layout

\begin_layout Itemize
PNG: Disposa d'una gran compressió mantenint la qualitat, com podria ser
 la del JPEG, però, amb la gran avantatge de que disposem de l'atribut alpha,
 el que permet tenir imatges amb transparències.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Àudio
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Els vídeos tindran el seu propi àudio, i encara que no està pensat com a
 requisit que es pugui reproduir àudio de manera independent, com podria
 ser una música de fons o una veu en off.
 Els formats que s'haurien de suportar per poder tenir un mínim de compatibilita
t són:
\end_layout

\begin_layout Itemize
WAV: Desenvolupat per Microsoft i un dels més utilitzats, és compatible
 amb pràcticament tots els còdecs.
 Accepten arxius d'una mida gran, fins a 4GB, i poden estar molt comprimits
 o poc.
\end_layout

\begin_layout Itemize
MPEG: Un dels formats més famosos per ser un estàndard en àudio i sobretot,
 en la música, podem trobar per exemple els còdecs MP2 (més utilitzat per
 aplicacions de broadcast) o el MP3.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Protocols de Streaming}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En quant a la sortida del vídeo/àudio resultant, s'haurà de decidir quin
 protocol s'utilitza, ja que es voldrà una sortida en streaming.
 El vídeo en streaming, o retransmissió en directe, és la emissió d'un flux
 de dades a temps real, o amb el menor retard possible, a un destí.
 Per exemple, quan mirem la televisió, tenint en compte que és per internet
 i no per antena, estem rebent un flux de dades que arriba des de uns servidors
 centrals de la cadena en particular.
 Es van començar a fer experiments de televisió fa molts anys, però la majoria
 van ser un fracàs degut al gran ample de banda que demanaven els vídeos.
 Per tant el que va sorgir primer van ser els serveis de VOD (Video on Demand).
 No s'ha de confondre el VOD amb el Streaming ja que son dos conceptes totalment
 diferents i que no utilitzen les mateixes tecnologies.
 Un exemple de servei VOD que va triomfar és la plataforma Youtube.
 Aquesta tecnologia va anar avançant fins que van millorar les connexions
 a internet i això va provocar que per fi el Streaming fos possible.
 L'objectiu del directe, és tenir un retard mínim, amb una qualitat bona.
 Actualment el mínim de qualitat per una plataforma professional és la resolució
 1920x1080.
 La resolució 4K dona molt bona qualitat, però requereix una quantitat molt
 alta d'ample de banda i actualment grans plataformes de streaming com Youtube
 o Twitch no ho permeten com a opció.
 Encara i això serà un repte a tenir en compte i seria un gran punt a favor
 respecte a la competència.
\end_layout

\begin_layout Standard
Els protocols de streaming són els encarregats de posar les 
\begin_inset Quotes fld
\end_inset

normes
\begin_inset Quotes frd
\end_inset

 en com es transmetrà el flux de dades, a més de contemplar els errors i
 minimitzar-los en tot el possible.
\end_layout

\begin_layout Standard
Un protocol no té res a veure amb un còdec o un format, sinó que és complementar
i a aquests i només s'ocupa de la transmissió.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/DiagramaProtocol.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama Protocol-Format-Códec
\begin_inset CommandInset label
LatexCommand label
name "fig:DiagramaProtocol"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tots els protocols hauran d'utilitzar un dels dos mètodes de transmissió
 que existeixen, que són TCP (Transmission Control Protocol) o bé, UDP (User
 Datagram Protocol).
 La diferencia més important i notòria entre aquests, és que el TCP, requereix
 d'una resposta del client, forçant a que tots els paquets arribin, el que
 fa una connexió més segura, però més lenta.
 Quan TCP no aconsegueix enviar un paquet correctament, repeteix el procés
 fins a aconseguir-ho.
 Per altre banda, UDP ignora això, simplement envia els paquets, i el receptor
 ja s'ocuparà de rebre-ho correctament.
 Això provoca que a vegades es puguin percebre fragments en el vídeo i pèrdua
 de qualitat, però és molt més ràpid i té menys retard.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/TCPvsUDP.png
	lyxscale 30
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparació TCP-UDP
\begin_inset CommandInset label
LatexCommand label
name "fig:TCPvsUDP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tornant als protocols de live streaming, hi ha molts per escollir, pel que
 es comentaran els més importants.
\end_layout

\begin_layout Itemize
RTMP (Real Time Messaging Protocol): Protocol TCP.
 És propietat d'Adobe, pel que era molt utilitzat a les webs que disposaven
 d'Adobe Flash Player.
 No obstant, s'ha quedat bastant obsolet i presenta problemes de compatibilitat
 amb còdecs moderns i la seguretat és baixa.
 Per altre banda, els resultats que dona són de bona qualitat i té molt
 suport amb les diferents plataformes i software.
 Els còdecs més recomanats per aquest protocol són H.264 pel vídeo, i AAC
 per l'àudio.
\end_layout

\begin_layout Itemize
WebRTC: Protocol TCP i UDP.
 Utilitzat per la gran majoria de desenvolupadors web, degut a la seva gran
 compatibilitat amb tots els navegadors moderns: Chrome, Firefox, Opera,
 Safari, Edge...
 És de gran qualitat i suporta els còdecs VP8 i VP9.
 Per l'àudio, tenim que WebRTC suporta el còdec Opus, gairebé el més utilitzat
 per vídeos en directe.
 A més, amb la avantatja de ser open-source, el projecte està en una constant
 evolució, i pròximament suportarà el còdec H.265, i més important encara
 el AV1, que promet una gran millora en tots els aspectes 
\begin_inset CommandInset citation
LatexCommand cite
key "AV1Codec"
literal "false"

\end_inset

.
 Té el millor resultat de latència, podent arribar a valors menors a 1 segon.
\end_layout

\begin_layout Itemize
FTL (Faster Than Light): Protocol UDP.
 Creat per l'empresa Microsoft, dedicat a la plataforma ja extinta Mixer
 
\begin_inset CommandInset citation
LatexCommand cite
key "MixerFTL"
literal "false"

\end_inset

.
 Una proposta que no va sortir del tot bé, i que pretenia competir directament
 amb Twitch 
\begin_inset CommandInset citation
LatexCommand cite
key "MixerCierre"
literal "false"

\end_inset

.
 Aquest protocol té com a objectiu ser el més ràpid, com indica el seu nom,
 per poder comunicar-te amb els visualitzadors del directe d'una manera
 pràcticament instantània.
 Tenint en compte que Twitch utilitza RTMP, i ho converteix a HLS 
\begin_inset CommandInset citation
LatexCommand cite
key "TwtichRTMP"
literal "false"

\end_inset

 (molt més lent que la proposta de Mixer), no era una mala idea.
 Encara i això, Twitch ja era massa gran i estàndard com per poder competir.
\end_layout

\begin_layout Itemize
SRT (Secure Realiable Transport): Protocol UDP.
 També es un protocol open-source, al igual que WebRTC, i és considerat
 com a l'evolució de RTMP.
 És de molta qualitat i bastant més estable als anteriors.
 Els objectius d'aquest projecte són crear un protocol que transmeti vídeos
 sense soroll al senyal (jitter) i que eviti la pèrdua de paquets.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/latencyGraph.png
	lyxscale 50
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Gràfic Latències Protocols de Streaming
\begin_inset CommandInset label
LatexCommand label
name "fig:LatencyGraph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Resumint, no hi ha protocols més bons o més dolents, depenent el projecte
 que es vulgui fer, serà més adequat un o altre.
 Pel projecte que s'ha proposat en aquest treball, es necessitarà sobretot
 un protocol amb poc retard.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
RTMP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
WebRTC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
FTL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SRT
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pros
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Estabilitat, gran compatibilitat i qualitat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open-source, còdecs actuals i molt baixa latència
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Qualitat adaptativa i molt ràpid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Molta qualitat, estabilitat i compatibilitat de còdecs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Contres
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Molta latència, més insegur que altres opcions, còdecs antics
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Constantment en desenvolupament i pot ser inestable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Qualitat inferior a la resta i poca compatibilitat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Està en desenvolupament, no hi ha gaire documentació
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Video Còdecs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
H.264
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VP8, VP9, H.264 (H.265 i AV1 futur proper)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
H.264
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Àudio Còdecs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AAC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Opus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Opus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Latència
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3-30 segons
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 segon o menys
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 segon o menys (menor a WebRTC)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 segon o menys
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Taula resum dels protocols esmentats
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Llibreries de processament}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La gran majoria d'aplicacions que utilitzem a diari que disposen de reproductors
 multimèdia, o qualsevol tipus de processament de vídeo/àudio, utilitzen
 llibreries externes per fer aquest procés més senzill.
 Hi ha varies opcions de llibreries de processament de contingut multimèdia.
 Totes elles tenen un desenvolupament complex, és per això que hi ha poca
 rivalitat, i totes disposen d'una API per utilitzar-les.
 Les més utilitzades i conegudes, són dues que es comentaran a continuació:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
FFMPEG
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
És la llibreria de processament de vídeo/àudio més gran que existeix, i
 és utilitzada per la gran majoria de desenvolupadors.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/FFmpegLogo.png
	lyxscale 30
	height 2cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Logo FFmpeg
\begin_inset CommandInset label
LatexCommand label
name "fig:FFmpeg"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Concretament, el que defineix FFmpeg, és un conjunt de software lliure (framewor
k), que tal i com diu a la seva documentació 
\begin_inset CommandInset citation
LatexCommand cite
key "FFmpeg About"
literal "false"

\end_inset

, les funcionalitats que permet són: 
\end_layout

\begin_layout Itemize
Descodificar: és l'acció de convertir un flux de dades en un contingut multimèdi
a visible i amb sentit per a un receptor.
\end_layout

\begin_layout Itemize
Codificar: és l'acció contraria a descodificar, convertir un contingut multimèdi
a a un flux de dades, ja sigui per una transmissió més còmode, comprimir,
 o el que es desitgi.
\end_layout

\begin_layout Itemize
Transcodificar: significa convertir un contingut multimèdia d'un còdec a
 un altre.
 Per exemple, ens podem trobar amb un contingut en H.265, que el volem reproduir
 en un ordinador relativament antic, que no accepta aquest còdec, pel que
 haurem de transcodificar-lo a un altre que l'ordinador si que 
\begin_inset Quotes fld
\end_inset

entengui
\begin_inset Quotes frd
\end_inset

 com podria ser el H.264.
\end_layout

\begin_layout Itemize
Multiplexar: si tenim vídeo i àudio per separat i ho volem ajuntar, el que
 haurem de fer es un mux, és a dir, ajuntar dos o més fluxos d'entrada,
 en un de sortida.
\end_layout

\begin_layout Itemize
Desmultiplexar: és el contrari de multiplexar, tenint un sol flux d'entrada,
 extraiem dos o més.
\end_layout

\begin_layout Itemize
Stream: si enlloc de voler generar un fitxer de sortida, el que volem és
 directament crear un streaming, utilitzant el protocol més apropiat, ho
 podem fer tot des de FFmpeg i sense utilitzar cap eina externa.
\end_layout

\begin_layout Itemize
Filtres: per si totes les funcionalitats anteriors fossin poques, també
 permeten aplicar filtres als àudios o als vídeos, el que ho fa molt còmode
 per poder automatitzar tasques des de terminal, sense haver d'utilitzar
 editors de vídeo o àudio.
 En quant a filtres d'àudio disposem de 105 efectes, entre ells els més
 senzills com el volum, compressors...
 I en quant al vídeo, disposem de 264 efectes, com per exemple, fer un crop,
 escalar, rotar...
 
\begin_inset CommandInset citation
LatexCommand cite
key "FFmpeg Filters"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Reproduir: FFmpeg també inclou una eina anomenada FFplay, que permet reproduir
 tot tipus d'arxius sense problemes.
 Normalment s'utilitza com a eina de test.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Es va desenvolupar principalment per GNU/Linux, però està disponible per
 tot tipus de plataformes com Windows i MacOS.
 S'utilitza a través d'un terminal, però també es pot integrar en tot tipus
 d'aplicacions per utilitzar-lo internament, com fa Audacity, Youtube, Chrome,
 OBS Studio, i molts altres grans projectes.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/ffmpegTranscode.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=bash,caption={Exemple Transcodificació d'un Arxiu a H.264},label={ffmpegTranscode}"

\end_inset


\end_layout

\begin_layout Standard
La instal·lació d'aquesta eina és molt senzilla, sobretot si s'utilitza
 Linux, o concretament Ubuntu, es pot aconseguir introduint un parell de
 línies al terminal.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/ffmpegInstall.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=bash,caption={Instalació FFmpeg Ubuntu},label={ffmpegInstall}"

\end_inset


\end_layout

\begin_layout Standard
També és molt utilitzat per la compressió de vídeos de manera automàtica,
 per exemple, si es puja un vídeo a 
\begin_inset Quotes fld
\end_inset

Twitter
\begin_inset Quotes frd
\end_inset

, no es pujarà el vídeo original, ja que el pes de l'arxiu seria excessiu
 per emmagatzemar-ho al seus servidors, sinó que es fa una copia reduïda
 del vídeo, i aquest és el que es guarda.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
LibVLC
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per altre banda trobem un altre gran framework, l'únic capaç de competir
 amb FFmpeg, i és LibVLC.
 Està desenvolupat per la organització VideoLAN, on tenen com a objectiu,
 des de la seva fundació, desenvolupar aplicacions open-source gratuïtes.
 Van començar el projecte a una universitat de França l'any 1996, i va començar
 a ser open-source a partir de l'any 2001, però, a l'any 2009 van decidir
 seguir amb el projecte de manera independent i trencar tots els vincles
 amb l'escola 
\begin_inset CommandInset citation
LatexCommand cite
key "VideoLAN"
literal "false"

\end_inset

.
 Ara mateix tenen desenvolupadors per 40 països diferents, i animen a la
 comunitat a contribuir i recolzar el projecte ja sigui programant, traduint,
 donant components i material, o amb alguna aportació econòmica 
\begin_inset CommandInset citation
LatexCommand cite
key "VideoLAN Contribution"
literal "false"

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El major projecte creat per aquesta organització és el mundialment conegut
 VLC, un reproductor multimèdia basat en les seves pròpies llibreries LibVLC.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/vlc1stVersion.jpg
	lyxscale 50
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Captura de la primera versió de VLC
\begin_inset CommandInset label
LatexCommand label
name "fig:VLC1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
LibVLC no està tant pensat per utilitzar-lo des de terminal com podria ser
 FFmpeg, i encara que també es pot integrar a qualsevol projecte, és més
 complicat de instal·lar i utilitzar 
\begin_inset CommandInset citation
LatexCommand cite
key "libVLCSampleCode"
literal "false"

\end_inset

.
 A continuació es mostra el codi base o plantilla del que partim per poder
 utilitzar libVLC mitjançant un script en C++.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/vlcExemple.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=C,caption={Codi base d'exemple de libVLC},label={libVLCSample}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Proposta tècnica}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Elecció de l'eina i justificació}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per poder decidir amb criteri i assegurar-se de que es pren la decisió correcte
 sobre quina és l'eina que s'ha de utilitzar, es farà una prova amb cada
 una de les eines esmentades (Chrome Headless, Unreal Engine 4 i Unity).
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Chrome Headless}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
És molt útil per tasques automatitzades, no es necessita cap tipus de software
 extra, com a molt es poden necessitar llibreries de nodejs pels scripts
 de javascripts, però en tot cas, quedaria tot empaquetat en un sol projecte.
 Al utilitzar el navegador de Chrome, això ens dona moltes avantatges en
 quant a simplicitat de les tasques, però també ens limita la potència,
 compatibilitat de còdecs i formats, pel que mai serà exactament igual que
 si executéssim les mateixes tasques de manera nativa al ordinador.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Si busquem projectes creats amb aquesta eina que s'assemblin a l'objectiu
 que volem aconseguir, trobem una aplicació creada per 
\begin_inset Quotes fld
\end_inset

Sebastian Pereyro
\begin_inset Quotes frd
\end_inset

, de la web Empirical 
\begin_inset CommandInset citation
LatexCommand cite
key "HeadlessChromeProject"
literal "false"

\end_inset

.
 Headless Chrome està disponible a partir de la versió 59, actualment van
 per la 91, pel que no seria cap problema utilitzar aquesta eina.
 Es poden carregar pàgines web i executar tests o tasques, a més de generar
 PDFs i fer captures de pantalla repetidament.
 A més comenta que es pot compartir de manera directa el contingut 
\begin_inset Quotes fld
\end_inset

Screencast content
\begin_inset Quotes frd
\end_inset

, això si, fent múltiples captures de pantalla.
 L'experiment que es va proposar va ser de capturar àudio i vídeo de manera
 automàtica, tant d'una web pròpia com d'una web externa i transmetre el
 contingut a Facebook, Youtube, Twitch...
\end_layout

\begin_layout Standard
El que utilitza com a eines, són Node.js, el navegador Headless Chrome en
 qüestió, Pulseaudio que és el motor de vídeo que utilitzarà per la captura,
 i FFmpeg que farà la transmissió final del flux de Headless Chrome cap
 a les destinacions pertinents.
 Tot això ho vol fer utilitzant un servidor que s'ocupi de totes les tasques.
 Tenint una aplicació client, en aquest cas farà ús de Postman 
\begin_inset CommandInset citation
LatexCommand cite
key "Postman"
literal "false"

\end_inset

, es comunica amb el servidor central que tindrà tota la programació, agafa
 el contingut multimèdia d'un altre web, i l'envia als servidors multimèdia.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/GraphHeadlessChromeEmpirical.png
	lyxscale 20
	height 5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Gràfic Experiment Headless Chrome
\begin_inset CommandInset label
LatexCommand label
name "fig:ExperimentHCEmpirical"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/ExperimentHCEmpirical.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=Java,caption={Experiment Headless Chrome Empirical},label={ExperimentEmpirical}"

\end_inset


\end_layout

\begin_layout Standard
En el codi que ens proporciona 
\begin_inset CommandInset ref
LatexCommand ref
reference "ExperimentEmpirical"
plural "false"
caps "false"
noprefix "false"

\end_inset

, podem comprovar com fa la captura de la pantalla.
 Es tracta de una captura total de la finestra del navegador.
 Per a fer-ho, utilitza una funció integrada al Chrome, anomenada startScreencas
t.
 Pels paràmetres de configuració que necessita i veient la documentació
 de Chrome DevTools 
\begin_inset CommandInset citation
LatexCommand cite
key "ChromeDevTools"
literal "false"

\end_inset

, podem deduir que es tracta un petit script que envia la comanda de fer
 captura de pantalla, en el format que desitgem (en el cas d'exemple és
 en jpeg), i junta aquests frames per aconseguir tenir un vídeo.
 En quant a l'àudio, ens comenta que encara que era un dels seus reptes,
 no està suportat per Chrome, pel que no es podrà capturar de manera nativa.
 La opció més vàlida serà capturar-lo per separat, i més tard ajuntar-ho,
 el que farà que hi hagi problemes de sincronització d'àudio/vídeo, un problema
 molt comú en aquest tipus de projectes.
 La qualitat dels vídeos tampoc podrà ser molt alta, ja que headless chrome
 no suporta acceleració per hardware amb GPU, ho veiem a l'exemple 
\begin_inset CommandInset ref
LatexCommand ref
reference "chrome"
plural "false"
caps "false"
noprefix "false"

\end_inset

 amb el flag –disable-gpu extret directament de la documentació de Google
 
\begin_inset CommandInset citation
LatexCommand cite
key "HeadlessChromeDevel"
literal "false"

\end_inset

.
 Un altre cosa que comenta és que el framerate serà variable, nosaltres
 podem enviar 30 comandes per segon de que faci la captura de pantalla,
 però és pràcticament impossible que vagi totalment sincronitzat i faci
 exactament les 30 captures cada segon, un dels problemes que comporta això,
 és que s'anirà dessincronitzant poc a poc, cada cop més, l'àudio.
\end_layout

\begin_layout Standard
Després de fer totes les captures, o mentre s'estan fent, es pot utilitzar
 FFmpeg per ajuntar les imatges en una seqüència de vídeo, ajuntar-li l'àudio,
 i transmetre-ho a on es desitgi, ja sigui en directe o a un fitxer local.
\end_layout

\begin_layout Standard
En aquest projecte, no s'ha utilitzat cap eina d'automatització de navegador,
 sinó que s'ha fet tot amb Headless Chrome Vanilla.
 Pel que es farà una prova utilitzant totes les eines del projecte, i a
 més, amb Puppeteer per poder-ho automatitzar tot.
\end_layout

\begin_layout Standard
Per la primera prova, es programarà tot en HTML i Javascript.
 Per una banda tindrem el index.html, un arxiu molt senzillet que contindrà
 un o dos vídeos locals que es reproduiran automàticament a dins un canvas,
 al obrir l'arxiu.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/tests/headlessChrome/index.html"
lstparams "breaklines=true,captionpos=b,frame=tb,language=HTML,caption={Test Chrome Headless | index.html},label={TestCHindex}"

\end_inset


\end_layout

\begin_layout Standard
L'aspecte de la web és correcte, tenim un vídeo, concretament, el tràiler
 de la pel·lícula Nightcrawler 
\begin_inset CommandInset citation
LatexCommand cite
key "Nightcrawler"
literal "false"

\end_inset

 ocupant tota la pantalla en el fons, i a la cantonada superior esquerra,
 ocupant un quart de la pantalla tenim el tràiler de la pel·lícula Stalker
 
\begin_inset CommandInset citation
LatexCommand cite
key "Stalker"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/CHindexhtml.jpg
	lyxscale 20
	height 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat index.html
\begin_inset CommandInset label
LatexCommand label
name "fig:HCTestindexhtml"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un dels primers problemes que han sorgit, ha sigut amb la reproducció dels
 vídeos, degut a que un navegador no està pensat exclusivament per aquestes
 funcions, les seves polítiques d'ús poden canviar dràsticament d'un dia
 per l'altre i destrossar un projecte d'aquest estil.
 Tant és així que a l'any 2017, van introduir una nova política a la versió
 71, en la que no estava permès auto reproduir els vídeos automàticament
 al obrir una web, sinó que el usuari havia de clicar manualment al vídeo.
 Això si, permetia reproduir-los si estaven sense so.
 Una política probablement introduïda per evitar el ús de publicitat molesta,
 però que hauria canviat per complet aquest projecte i hauria fet que deixés
 de funcionar.
 Per tant, les opcions que es tenen, és reproduir els vídeos sense àudio
 (inviable ja que l'àudio és un dels requisits), o utilitzar una eina externa
 com Puppeteer per fer 
\begin_inset Quotes fld
\end_inset

trampes
\begin_inset Quotes frd
\end_inset

 i clicar allà on vulguem fent creure al navegador que ho està fent un usuari
 qualsevol.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/tests/headlessChrome/videoPlayback.js"
lstparams "breaklines=true,captionpos=b,frame=tb,language=Java,caption={Test Reproducció Videos | videoPlayback.js},label={TestCHvideoPlayback}"

\end_inset


\end_layout

\begin_layout Standard
Amb aquest codi ja tindrem uns scripts que guardaran 30 captures per segon
 a una carpeta local.
 A la vegada, podem executar una comanda FFmpeg, per convertir aquestes
 captures en una seqüència de vídeo, i guardar-ho a un arxiu local.
 Això ho podrem aconseguir amb aquesta sèrie de comandes a la terminal.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/tests/headlessChrome/ffmpegCommands.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language=bash,caption={Comandes FFmpeg},label={TestCHffmpeg}"

\end_inset


\end_layout

\begin_layout Standard
Pel FFmpeg s'utilitzen els flags:
\end_layout

\begin_layout Itemize
-r 24: indica el número de frames per segon que tindrà el vídeo resultant.
\end_layout

\begin_layout Itemize
-pattern_type glob 
\begin_inset CommandInset citation
LatexCommand cite
key "FFmpegPatternType"
literal "false"

\end_inset

: indiquem el patró del nom dels arxius per una lectura correcte, en aquest
 cas ens ajudàvem d'un txt que contenia tots els noms dels arxius, generat
 automàticament pel javascript.
\end_layout

\begin_layout Itemize
-re: indica que el processament s'ha de fer amb una velocitat de 1x, per
 evitar que processi les imatges més ràpid de 24 FPS i es vegi més ràpid
 del que hauria.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Aquesta solució no ha donat uns resultats gaire atractius, sobretot pel
 fet d'estar capturant la pantalla amb screenshots, i sense poder transmetre
 el àudio.
 Pel que s'ha provat un altre alternativa, basada en un altre projecte creat
 per l'usuari de Github FBSamples 
\begin_inset CommandInset citation
LatexCommand cite
key "FBSamplesRepo"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
En aquesta altre proposta, trobem algunes variants interessants, el més
 diferent és que utilitza un servidor de websockets com a intermediari.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/architectureFacebookCanvas.png
	lyxscale 20
	height 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura Projecte Canvas Streaming
\begin_inset CommandInset label
LatexCommand label
name "fig:HCCanvasStreaming"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Això sí, per capturar el canvas, utilitza MediaRecorder, que és el mateix
 plugin que s'utilitzava en la primera prova.
 Fent algunes modificacions al projecte de github de prova obtenim resultats
 amb el html creat anteriorment.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/tests/headlessChrome/server.js"
lstparams "breaklines=true,captionpos=b,frame=tb,language=Java,caption={Servidor Websockets | server.js},label={TestCHserver}"

\end_inset


\end_layout

\begin_layout Standard
Les avantatges amb aquest canvi és que aconseguim molta més qualitat de
 imatge, i es captura automàticament el so.
 Per altre banda, es segueix utilitzant Pulseaudio de manera autònoma, pel
 que seguirà havent un retard variant de vídeo/àudio.
\end_layout

\begin_layout Standard
Les conclusions que es treuen d'aquest experiment és que aquesta eina és
 interessant per fer algun petit projecte o que no requereixi de so, però
 no acaba d'encaixar en els requisits que es proposaven.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Unreal Engine 4}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per la prova amb Unreal Engine, s'ha utilitzat una tecnologia molt popular
 a la televisió, i que recentment ha estat integrada a Unreal com a plugin
 extern.
 Es tracta del software NDI (Network Device Interface) 
\begin_inset CommandInset citation
LatexCommand cite
key "NewTekNDI"
literal "false"

\end_inset

.
 Creat per la empresa NewTek i amb una llicència privativa, permet una gran
 qualitat d'imatge, amb poc retard i una estructura molt estable.
 Dóna un grau important de professionalitat i compta amb un suport per part
 de NewTek i un fòrum de comunitat.
 Les desavantatges són, que al ser una empresa que recolza el software privatiu
 i tancat, no té cap mena de suport per Linux, només per Windows i MacOS.
 Sumant això a que la compatibilitat d'Unreal Engine tampoc és extraordinària,
 és bastant inabastable aconseguir bons resultats amb Unreal en una màquina
 Linux.
 Per tant, les proves que es faran seran des de una màquina Windows per
 comprovar la potència d'aquesta tecnologia.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per començar, crearem un streaming de NDI des de VLC, per poder comprovar
 que funciona correctament tant entrada com sortida de fluxos.
 Un cop instal·lem les Tools de NDI, el plugin de VLC per poder treballar
 amb aquest software, s'instal·larà automàticament.
 Només cal entrar a les opcions de VLC i marcar com a motor de sortida 
\begin_inset Quotes fld
\end_inset

NewTek NDI Video Output
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/NDIVLC.jpg
	lyxscale 20
	height 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuració Sortida NDI a VLC
\begin_inset CommandInset label
LatexCommand label
name "fig:NDIVLC"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Encara que per aquesta prova s'hagi fet la sortida amb VLC, es pot fer de
 moltes altres maneres, com pot ser FFmpeg o una eina pròpia de NDI dedicada
 a això.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un cop ja tenim un flux de vídeo creat, l'haurem de rebre a l'Unreal, per
 fer-ho, hem d'utilitzar el plugin corresponent, i seguir els passos de
 la seva documentació 
\begin_inset CommandInset citation
LatexCommand cite
key "NDI Unreal Documentation"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/NDIReceive.jpeg
	lyxscale 20
	height 1.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Node NDI Receiver
\begin_inset CommandInset label
LatexCommand label
name "fig:NDIReceiver"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ara que ja està tot programat, ja comencem a veure alguns resultats d'aquest
 software.
 Per aprofitar l'Unreal i provar altres efectes també, s'ha escollit un
 vídeo amb un chroma per comprovar com es comportava davant un streaming
 calculant-lo a temps real.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/UnrealNDI.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat NDI Input
\begin_inset CommandInset label
LatexCommand label
name "fig:NDIReceiverResultat"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Els resultats d'aquesta prova han sigut molt bons, la latència del NDI era
 molt baixa, a més d'una qualitat sorprenent.
 Ha donat alguns problemes d'estabilitat en algun moment, però s'ha de tenir
 en compte que el plugin d'Unreal encara és molt nou i és normal que doni
 algun problema que altre, encara i això, són resultats prou estables i
 té potencial per poder ser utilitzat com a eina de televisió professional.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Unity}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per la prova del Unity, s'ha creat un projecte que contingui diversos elements.
 Un vídeo de fons, un element 3D amb un vídeo com a texture, un logo 3D
 i un PNG amb transparència.
 Per a la reproducció de vídeos s'ha escollit el plugin UMP (Universal Media
 Player) 
\begin_inset CommandInset citation
LatexCommand cite
key "UMP Plugin"
literal "false"

\end_inset

, considerat el reproductor més complert de tota l'Asset Store (plataforma
 de descàrrega de plugins).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/UMPFunctions.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Funcionalitats UMP
\begin_inset CommandInset label
LatexCommand label
name "fig:UMPFunctions"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A més, és l'únic compatible amb Linux, el sistema operatiu més utilitzat
 en sistemes al núvol 
\begin_inset CommandInset citation
LatexCommand cite
key "Cloud Linux"
literal "false"

\end_inset

.
 Pel UMP, haurem de posar un element que controla la reproductor, i definir
 quines són les malles que han de renderitzar el vídeo.
 Per aquesta prova es té un controlador que reproduirà el vídeo del fons,
 i un altre que reproduirà el vídeo de la càpsula, l'altre element 3D.
 A més, tindrem una animació pel logo 3D que anirà girant, i un altre per
 la càpsula que s'anirà movent per la pantalla.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tests/UnityTest.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Prova Unity
\begin_inset CommandInset label
LatexCommand label
name "fig:ProvaUnity"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Els resultats amb Unity han sigut molt satisfactoris, no ha donat cap problema
 i la reproducció ha sigut la més fluida.
 El plugin UMP suporta pràcticament tot tipus de formats de vídeos ja que
 utilitza les llibreries de libVLC.
 El codi és mitjanament obert pel que es podrà editar fàcilment.
 La imatge en PNG té la transparència perfectament aplicada, pel que veiem
 que el Unity suporta els valors d'alpha d'aquest.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Ara que ja s'han fet proves suficients amb totes les eines, es pot decidir
 sense cap tipus de dubte, que la millor opció per aquest projecte és 
\series bold
Unity
\series default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Taula Comparativa Eines Gràfiques}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Està clar que cada eina té les seves avantatges i desavantatges, tampoc
 hi ha una que sigui millor que l'altre, sinó que depèn del projecte que
 es vulgui fer les solucions seran molt diferents.
 A continuació es resumeixen els avantatges i desavantatges esmentats anteriorme
nt, partint del punt de vista per aquest projecte.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="2.5cm">
<column alignment="center" valignment="middle" width="2.5cm">
<column alignment="center" valignment="middle" width="2.5cm">
<column alignment="center" valignment="middle" width="2.5cm">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Chrome Headless
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Unreal Engine 4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Unity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pros
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simplicitat, alta compatibilitat, no requereix utilitzar plugins
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
És professional, millor qualitat d'il·luminació
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Molta documentació, molts plugins open-source, optimitzat per escenes senzilles,
 alta compatibilitat
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Contres
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pot quedar limitat en quant a potència; efectes de vídeo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relativament poca documentació, no tants plugins i comunitat com la competència,
 poca compatibilitat amb Linux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Menys potent que Unreal, eines externes no professionals creades per la
 comunitat
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparativa subjectiva de les possibles eines
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Elecció de les llibreries a utilitzar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Entrada de fluxos}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Decidit Unity com a eina a utilitzar, el següent pas és escollir les llibreries
 que permetran l'entrada de fluxos.
 Anteriorment s'han comentat les dues més importants, que són FFmpeg i libVLC.
 A les proves del Unity s'ha utilitzat un plugin anomenat UMP, el qual ha
 donat molts bons resultats.
 S'ha decidit utilitzar-lo ja que fa ús de libVLC, i ens ofereix una gran
 compatibilitat, a diferència d'altres com pot ser AVPro 
\begin_inset CommandInset citation
LatexCommand cite
key "AVPro"
literal "false"

\end_inset

, molt més potent, però amb la desavantatge d'utilitzar llibreries pròpies
 i no ser compatible amb Linux.
\end_layout

\begin_layout Standard
Encara i apuntar tot a UMP, s'ha fet una prova comparativa dels dos plugins,
 ambdós executant-se en el mateix sistema operatiu (Windows 10) i mateixes
 condicions, un vídeo molt pesat en resolució 8K.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/AVPro.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Prova AVPro (Video 8K)
\begin_inset CommandInset label
LatexCommand label
name "fig:AVProvsUMP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/UMPvsAVPro.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Prova UMP (Video 8K)
\begin_inset CommandInset label
LatexCommand label
name "fig:UMPvsAVPro"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Les conclusions són que el AVPro és molt més potent per vídeos en 4K o més,
 però en vídeos 1080p o menys, el rendiment és molt igualat, i si tenim
 en compte que UMP accepta molts més formats, tenim un clar guanyador pels
 objectius d'aquest projecte on resolucions de 4K o més, no són la prioritat.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Sortida del frame}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per altre banda, la sortida del frame és més complicada, no és comú voler
 treure per streaming el frame de Unity.
 La opció més viable sembla utilitzar FFmpeg amb configuracions de piping.
 És a dir, hauríem de generar les imatges a dins de Unity a una velocitat
 determinada per aconseguir els FPS (Frames per second) desitjats.
 I després introduir-ho a FFmpeg amb una comanda utilitzant 
\begin_inset Quotes fld
\end_inset

pipe
\begin_inset Quotes frd
\end_inset

 com a input.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Hi ha un projecte de Github 
\begin_inset CommandInset citation
LatexCommand cite
key "FFmpegOut"
literal "false"

\end_inset

, desenvolupat per l'usuari Keijiro, molt conegut a la comunitat de Unity
 per crear una gran varietat de plugins molt útils i innovadors.
 El que aconsegueix és introduir FFmpeg a Unity, i utilitzar el mètode dels
 pipeline per gravar un vídeo local.
 Afortunadament el codi és open-source, pel que el podem modificar per aconsegui
r que enlloc de generar un fitxer en local, faci un streaming per rtp.
 Aconseguit això, ens trobem amb diversos problemes.
 Amb Linux només suporta la API de render 
\begin_inset Quotes fld
\end_inset

Vulkan
\begin_inset Quotes frd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Vulkan"
literal "false"

\end_inset

.
 És una API que està agafant molta força, però és millor evitar-la ja que
 és encara molt nova, i el plugin de reproducció de vídeo que s'utilitza
 només suporta OpenGL.
 A part d'això i més important, l'àudio no surt de cap manera, i s'ha de
 capturar de manera externa, pel que serà molt complicat sincronitzar-ho
 amb el vídeo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un altre opció és automatitzar unes comandes de FFmpeg per capturar la finestra
 i generar un streaming de sortida.
 Com ja ha sigut comentat abans, FFmpeg és l'eina més potent de vídeo i
 es controla mitjançant comandes al terminal, el que és molt útil per a
 poder automatitzar les tasques a través de scripts.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Elecció del hardware i sistema}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Plataforma Virtual AWS}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'elecció de la plataforma que contindrà el software no ha sigut gaire complicad
a.
 Les opcions eren Azure, AWS (Amazon Web Services) 
\begin_inset CommandInset citation
LatexCommand cite
key "AWS"
literal "false"

\end_inset

 o Google.
 Es tracten de plataformes Cloud on es poden emmagatzemar i executar tot
 tipus d'arxius.
 Són molt utilitzades ja que només les mega corporacions disposen d'infraestruct
ures de servidors propis, la majoria de desenvolupadors lloguen els servidors
 a una d'aquestes plataformes.
 Comparativa entre AWS i Azure 
\begin_inset CommandInset citation
LatexCommand cite
key "AWSvsAzure"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="5.5cm">
<column alignment="center" valignment="middle" width="5.5cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AWS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Azure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plataforma de computació al núvol sota demanda (Amazon)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plataforma pública al núvol (Microsoft)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Amigable des de els seus inicis amb el model de codi obert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No tenen bona relació amb la comunitat de codi obert
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Té una gran avantatge en quant a ofertes de núvol governamental
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Limitat en quant a ofertes per al núvol governamental
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Models de preu flexibles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Models de preus més tancats i menys varietat
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Segueix donant recolzament per suportar els models de núvols híbrids
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Excel·lent per models amb núvols híbrids
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gran varietat de software i sistemes operatius tant Linux com Windows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Està més limitat al sistema operatiu de Windows encara que també té algunes
 opcions de Linux
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
El sistema d'emmagatzematge de AWS (EBS) és molt ràpid per sistemes amb
 big data.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L'emmagatzematge estàndard té problemes amb el big data i per tant s'ha
 de contractar un server de primera qualitat.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entorns molt més madurs pel big data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entorns més verds per big data, encara que Azure està millorant en aquest
 aspecte
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es pot accedir a les màquines de manera individual
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Les màquines estan agrupades en un sol servei al núvol i responen al mateix
 domini però amb diferents ports
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es paga per hora utilitzada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es paguen per minut
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S3 Arxius de recuperació a curt termini.
 Per llargs terminis es pot utilitzar Glacier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Té una opció semblant a S3, però per recuperacions a llarg termini encara
 no disposa de cap solució
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
La seguretat es proporciona a través de rols definits per l'usuari administrador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Es defineix un director que serà l'administrador del servidor
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparativa subjectiva de les possibles eines
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
AWS és la millor opció per hostejar aquest projecte, a més concorda amb
 l'elecció de l'empresa on s'està fent aquest projecte, Watchity, que tenen
 tot el seu software i servidors contractats amb aquesta plataforma.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Sistema operatiu}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per escollir el sistema operatiu més adient haurem de veure les avantatges
 que té cada un dels més populars, que són: Windows, MacOS i Linux.
 Tenint en compte que el projecte s'emmagatzemarà i s'executarà des de un
 servidor de AWS, el més adient és tenir-ho amb el sistema operatiu més
 popular al núvol, Linux.
 Windows també disposa d'opcions per ser executat en un servidor, però les
 funcionalitats son infinitament inferiors, a més de ser privatiu i no permetre
 la modificació de cap element del sistema.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per tant, sabent que el sistema operatiu serà Linux, també caldrà escollir
 la distribució més adient.
 Les millors opcions són Ubuntu Server, CentOS, SUSE i Arch.
 Cada un d'ells tenen les seves avantatges i desavantatges.
 A Watchity, treballen amb CentOS en totes les seves màquines, ja que es
 una distribució molt sòlida i de les més utilitzades per servidor.
 La diferència més gran entre aquests dos és que Ubuntu al estar basat en
 Debian, els paquets són instal·lats en .deb amb el gestor de paquets 
\begin_inset Quotes fld
\end_inset

apt-get
\begin_inset Quotes frd
\end_inset

, mentre que a CentOS s'utilitza 
\begin_inset Quotes fld
\end_inset

yum
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

dnf
\begin_inset Quotes frd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Realment per aquest projecte és indiferent l'elecció d'un o un altre, pel
 que s'escollirà CentOS simplement per no diferenciar-se a la metodologia
 de treball de Watchity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/CentOSLogo.png
	lyxscale 20
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CentOS Logo
\begin_inset CommandInset label
LatexCommand label
name "fig:CentOS"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Part Pràctica}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Les eleccions ja han estat preses i és el moment de començar amb el desenvolupam
ent de l'aplicació.
 Finalment s'ha decidit utilitzar Unity, amb l'eina UMP per a l'entrada
 de fluxos de vídeo, FFmpeg per la sortida del frame, AWS que serà el servidor
 que emmagatzemarà i executarà l'aplicació, i com a sistema operatiu s'ha
 decantat per la distribució de Linux Centos 8.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Arquitectura del sistema}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'aplicació es compondrà d'un binari executable de Unity, emmagatzemat a
 un servidor d'AWS.
 En aquest servidor es rebran crides cURL a través d'un frontend comprensible
 per l'usuari a qui va dirigit.
 Les peticions dels usuaris seran processades i 
\begin_inset Quotes fld
\end_inset

traduïdes
\begin_inset Quotes frd
\end_inset

 per fer els canvis a l'aplicació de Unity d'una manera que entengui.
 El servidor estarà emetent constantment la sortida del Unity amb un monitor
 virtual, que serà enviada per multi cast a la web on l'usuari està interactuant
 per poder veure els canvis que ha realitzat.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Arquitectura.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura del Projecte
\begin_inset CommandInset label
LatexCommand label
name "fig:Arquitectura"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Possibilitats}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Resolució}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La resolució de l'aplicació serà per defecte 1920x1080.
 Això es defineix a la configuració de la targeta gràfica del servidor d'AWS,
 concretament a l'arxiu /etc/X11/xorg.conf.
 Aquest, és un arxiu de configuració que utilitza Nvidia i que emmagatzema
 tot tipus de configuració gràfica, ja sigui resolucions, tipus de targeta,
 monitors virtuals, refresc, etc.
 Al tractar-se d'un servidor, les configuracions gràfiques s'han de realitzar
 manualment, i crear un xorg.conf que s'adeqüi a les necessitats de cada
 un.
 X11 és el sistema de finestres més utilitzat de Linux.
 S'utilitza per donar interfície gràfica als sistemes Unix.
 Encara que no és necessari per a servidors i per tant no venen instal·lats
 de sèrie, en aquest cas si que es necessitarà, ja que l'aplicació s'ha
 de poder executar en una finestra, encara que aquesta sigui virtual.
 
\end_layout

\begin_layout Standard
A continuació s'adjunta el fitxer xorg que s'ha realitzat per aquest projecte.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/xorg.conf"
lstparams "breaklines=true,captionpos=b,frame=tb,language=bash,caption={Configuració Gràfica | xorg.conf},label={Xorg}"

\end_inset


\end_layout

\begin_layout Standard
Començant amb la secció de 
\begin_inset Quotes fld
\end_inset

Monitor
\begin_inset Quotes frd
\end_inset

, serveix per definir un nou monitor, pel primer cas fem un primari amb
 el nom Monitor0, i en el segon cas fem un monitor secundari amb el nom
 Monitor1, situat a l'esquerra del primari.
 Aquest segon monitor es crea per si de cas en un futur es volgués tenir
 més d'una aplicació de Unity executant-se a la vegada, encara que la idea
 es tenir-ne només una en cada màquina AWS de forma ordinària.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La següent secció és el 
\begin_inset Quotes fld
\end_inset

Device
\begin_inset Quotes frd
\end_inset

, tracta de la targeta gràfica que es té instal·lada, amb tota la informació
 necessària, molt important posar el model (Tesla T4), targetes molt potents
 que a disposició de AWS, i el BusID, en aquest cas el PCI:0:30:0.
 Si no es posen aquestes dades, podria no funcionar la connexió gràfica
 amb l'ordinador.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
A la secció 
\begin_inset Quotes fld
\end_inset

Screen
\begin_inset Quotes frd
\end_inset

 es defineix la configuració de pantalla.
 Molt diferent a la configuració de monitor.
 En aquest bloc es posarà un nom identificador 
\begin_inset Quotes fld
\end_inset

Screen0
\begin_inset Quotes frd
\end_inset

, el dispositiu gràfic que s'utilitza 
\begin_inset Quotes fld
\end_inset

Device0
\begin_inset Quotes frd
\end_inset

 (referència a la GPU Nvidia Tesla T4), el monitor que renderitza aquesta
 pantalla 
\begin_inset Quotes fld
\end_inset

Monitor0
\begin_inset Quotes frd
\end_inset

 la profunditat de color, que són 24.
 Ja que utilitzarem el estàndard, corresponent al True Color 24-bit, que
 utilitza 8-bits per cada color primari R, G i B.
 Cada cop s'està utilitzant més el Deep Color que utilitza 10-bits per canal,
 més conegut com a HDR (també existeix de 12-bits o més) 
\begin_inset CommandInset citation
LatexCommand cite
key "HDRGuia"
literal "false"

\end_inset

 en els televisors més actuals, si en volguéssim fer ús i poder utilitzar
 contingut que disposi d'aquesta tecnologia hauríem de posar un 30 en el
 valor de DefaultDepth.
 Però ara per ara, no interessa utilitzar HDR i no és un objectiu proposat
 que l'aplicació ho permeti.
\end_layout

\begin_layout Standard
Seguit d'això es crea una subsecció que contindrà unes dades fixades de
 com ha de ser la pantalla, amb una resolució de 1920x1080 i 24 de profunditat.
\end_layout

\begin_layout Standard
Per últim, i de manera opcional, es poden definir unes opcions de comportament
 de la pantalla, el que s'ha utilitzat són les opcions de ForceFullCompositionPi
peline i TripleBuffer per evitar bugs gràfics en els que la pantalla pot
 quedar tallada verticalment (un bug bastant comú en sistemes Linux amb
 gràfiques d'Nvidia).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/VSyncXorg.png
	lyxscale 20
	height 6cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemple Bug Gràfic VSync
\begin_inset CommandInset label
LatexCommand label
name "fig:XorgVSync"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vist això, queda provat que es pot definir qualsevol resolució al sistema,
 nomes caldrà canviar l'arxiu de configuració xorg.conf i posar la que es
 desitgi.
 Es podria posar una resolució de 4K o 720p, això si, lògicament com més
 alta sigui la resolució, més latència es tindrà a la sortida.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Compatibilitat fluxes d'entrada}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per l'entrada de vídeos s'utilitza el plugin UMP de l'asset store de Unity,
 que a la vegada aquest utilitza internament les llibreries libVLC, pel
 que es permetrà qualsevol format que VLC accepti de manera nativa.
 Segons la pròpia pàgina de Videolan, creadors de libVLC els formats acceptats
 són:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Vídeo Còdecs
\end_layout

\begin_layout Itemize
MPEG-1/2
\end_layout

\begin_layout Itemize
DivX® (1/2/3/4/5/6)
\end_layout

\begin_layout Itemize
MPEG-4 ASP
\end_layout

\begin_layout Itemize
XviD
\end_layout

\begin_layout Itemize
3ivX D4
\end_layout

\begin_layout Itemize
H.261
\end_layout

\begin_layout Itemize
H.263 / H.263i, H.264 / MPEG-4 AVC
\end_layout

\begin_layout Itemize
Cinepak
\end_layout

\begin_layout Itemize
Theora
\end_layout

\begin_layout Itemize
Dirac / VC-2
\end_layout

\begin_layout Itemize
MJPEG (A/B)
\end_layout

\begin_layout Itemize
WMV 1/2
\end_layout

\begin_layout Itemize
WMV 3 / WMV-9 / VC-1
\end_layout

\begin_layout Itemize
Sorenson 1/3
\end_layout

\begin_layout Itemize
DV
\end_layout

\begin_layout Itemize
On2 VP3/VP5/VP6
\end_layout

\begin_layout Itemize
Indeo Video v3 (IV32)
\end_layout

\begin_layout Itemize
Real Video (1/2/3/4)
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Àudio
\end_layout

\begin_layout Itemize
MPEG Layer 1/2
\end_layout

\begin_layout Itemize
MP3 - MPEG Layer 3
\end_layout

\begin_layout Itemize
AAC - MPEG-4 part3
\end_layout

\begin_layout Itemize
Vorbis
\end_layout

\begin_layout Itemize
AC3 - A/52
\end_layout

\begin_layout Itemize
E-AC-3
\end_layout

\begin_layout Itemize
MLP / TrueHD>3
\end_layout

\begin_layout Itemize
DTS
\end_layout

\begin_layout Itemize
WMA 1/2
\end_layout

\begin_layout Itemize
WMA 3
\end_layout

\begin_layout Itemize
FLAC
\end_layout

\begin_layout Itemize
ALAC
\end_layout

\begin_layout Itemize
Speex
\end_layout

\begin_layout Itemize
Musepack / MPC
\end_layout

\begin_layout Itemize
ATRAC 3
\end_layout

\begin_layout Itemize
Wavpack
\end_layout

\begin_layout Itemize
Mod
\end_layout

\begin_layout Itemize
TrueAudio
\end_layout

\begin_layout Itemize
APE
\end_layout

\begin_layout Itemize
Real Audio
\end_layout

\begin_layout Itemize
Alaw/µlaw
\end_layout

\begin_layout Itemize
AMR (3GPP)
\end_layout

\begin_layout Itemize
MIDI
\end_layout

\begin_layout Itemize
LPCM
\end_layout

\begin_layout Itemize
ADPCM
\end_layout

\begin_layout Itemize
QCELP
\end_layout

\begin_layout Itemize
DV Audio
\end_layout

\begin_layout Itemize
QDM2/QDMC
\end_layout

\begin_layout Itemize
MACE
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Subtítols
\end_layout

\begin_layout Itemize
DVD
\end_layout

\begin_layout Itemize
Text files (MicroDVD, SubRIP, SubViewer, SSA1-5, SAMI, VPlayer)
\end_layout

\begin_layout Itemize
Closed captions
\end_layout

\begin_layout Itemize
Vobsub
\end_layout

\begin_layout Itemize
Universal Subtitle Format (USF)
\end_layout

\begin_layout Itemize
SVCD / CVD
\end_layout

\begin_layout Itemize
DVB
\end_layout

\begin_layout Itemize
OGM
\end_layout

\begin_layout Itemize
CMML
\end_layout

\begin_layout Itemize
Kate
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Fluxos d'entrada
\end_layout

\begin_layout Itemize
UDP/RTP Unicast
\end_layout

\begin_layout Itemize
UDP/RTP Multicast
\end_layout

\begin_layout Itemize
HTTP / FTP
\end_layout

\begin_layout Itemize
MMS
\end_layout

\begin_layout Itemize
TCP/RTP Unicast
\end_layout

\begin_layout Itemize
DCCP/RTP Unicast
\end_layout

\begin_layout Itemize
Arxius Locals
\end_layout

\begin_layout Itemize
DVD Video
\end_layout

\begin_layout Itemize
Video CD / VCD
\end_layout

\begin_layout Itemize
SVCD
\end_layout

\begin_layout Itemize
Audio CD (no DTS-CD)
\end_layout

\begin_layout Itemize
DVB (Satellite, Digital TV, Cable TV)
\end_layout

\begin_layout Itemize
MPEG encoder
\end_layout

\begin_layout Itemize
Video acquisition
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Formats d'entrada
\end_layout

\begin_layout Itemize
MPEG (ES,PS,TS,PVA,MP3)
\end_layout

\begin_layout Itemize
AVI
\end_layout

\begin_layout Itemize
ASF / WMV / WMA
\end_layout

\begin_layout Itemize
MP4 / MOV / 3GP
\end_layout

\begin_layout Itemize
OGG / OGM / Annodex
\end_layout

\begin_layout Itemize
Matroska (MKV)
\end_layout

\begin_layout Itemize
Real
\end_layout

\begin_layout Itemize
WAV (including DTS)
\end_layout

\begin_layout Itemize
Raw Audio: DTS
\end_layout

\begin_layout Itemize
AAC
\end_layout

\begin_layout Itemize
AC3/A52
\end_layout

\begin_layout Itemize
Raw DV
\end_layout

\begin_layout Itemize
FLAC
\end_layout

\begin_layout Itemize
FLV (Flash)
\end_layout

\begin_layout Itemize
MXF
\end_layout

\begin_layout Itemize
Nut
\end_layout

\begin_layout Itemize
Standard MIDI / SMF
\end_layout

\begin_layout Itemize
Creative™ Voice
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
En resum, tots els formats estandarditzats son perfectament compatibles
 amb l'aplicació i hauria de ser bastant complicat trobar-se amb un vídeo
 incompatible per la reproducció.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Control de l'app}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El control de l'aplicació es farà mitjançant comandes cURL, que contindran
 text pla amb les instruccions que haurà de fer el Unity, per exemple 
\begin_inset Quotes fld
\end_inset

addVideo
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

destroyBackground
\begin_inset Quotes frd
\end_inset

, etc.
 La metodologia per utilitzar cada funcionalitat serà semblant entre elles
 per aconseguir un ús fluït i senzill d'entendre.
 Els elements estaran separats en Vídeos, Imatges, Textos i Background.
 Exceptuant el background, la resta seran un conjunt d'arrays ordenats per
 números, tindrem el vídeo número 1, número 3, i no caldrà que tinguin un
 ordre seqüencial, a més de crear arrays dinàmics per permetre una longitud
 infinita.
\end_layout

\begin_layout Standard
La metodologia de la comanda a seguir serà: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
function=elementNumber%attributes~optionalSettings
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Exemple:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
addVideo=1%/home/user/videoTest.mp4~1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Seguint d'esquerra a dreta l'exemple que s'ha posat tenim a la banda esquerra
 de l'igual, la funció que haurà de fer, en aquest cas addVideo, és a dir,
 afegir un nou vídeo a l'escena actual.
 Després de l'igual tenim tots els atributs i configuració, en aquest cas
 posem el vídeo a la posició 1 (no posició espacial, sinó de l'array), utilitzem
 el separador % per introduir l'atribut principal que pràcticament totes
 les funcionalitats tindran, per aquest exemple serà la ruta on es troba
 el vídeo que es vol reproduir.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Compatibilitat audio}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per altre banda tenim el sistema d'àudio, en el que un usuari pot posar
 una cançó, veu en off, o el que vulgui de fons.
 Aquí no s'utilitza libVLC, sinó la llibreria interna d'àudio de la que
 disposa Unity, pel que serà compatible únicament amb àudio WAV i MPEG,
 que ha de ser més que suficient tenint en compte que no és un objectiu
 principal ni molt demandat, i es compleix un suport dels estàndards d'àudio.
 Això sí, s'accepten fitxers tant locals com al núvol, descarregant la informaci
ó d'aquests, i emmagatzemant-la en un array d'AudioClips.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/addAudio.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Àudio | addAudio.cs},label={AddAudio}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Transicions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es permeten 3 tipus de transicions en vídeos, per tall, crossfade i fade.
 En la de tall, passem d'un vídeo a un altre d'una manera brusca.
 El crossfade significa canviar d'un vídeo a un altre fent que un va desapareixe
nt mentre el segon apareix, pel que no passem per un pla en negre i pot
 quedar més dinàmic segons el moment.
 En el fade en canvi, el primer vídeo es va difuminant fins a passar a un
 pla en negre, i un cop s'ha arribat al negre, el segon apareix de manera
 gradual.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per fer ús d'aquestes funcionalitats disposarem de 2 comandes:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
dissolve=videoNumber%link_localPath~transitionTime
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquesta crida servirà per fer un canvi d'un vídeo a un altre, amb un efecte
 de fade.
 El atribut transitionTime que va després del símbol ~ és opcional, i per
 defecte el valor serà 0.
 Aquest valor indica els segons que trigarà en desaparèixer un vídeo, és
 a dir que la transició completa serà el doble del valor que s'introdueixi.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
cross=videoNumber%link_localPath~transitionTime
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En canvi si posem el mode 
\begin_inset Quotes fld
\end_inset

cross
\begin_inset Quotes frd
\end_inset

, es farà un efecte de crossfade amb una transició dinàmica.
 El valor de transitionTime funciona exactament igual que l'anterior, per
 tant, el temps total de la transició també serà el doble del valor introduït.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El tercer tipus de transició que s'havia comentat era el de tall, com és
 bastant innecessari crear una nova funció per aquesta transició tan senzilla,
 el que s'ha de fer és utilitzar qualsevol de les dues però amb un valor
 de transitionTime de 0, que es pot declarar explícitament o com ja s'ha
 comentat abans, no posar-lo i l'agafarà igualment com a valor per defecte.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Addicionalment, totes les transicions incorporen un script per tal de que
 l'àudio baixi de manera gradual conforme desapareguin els vídeos i no talli
 de manera brusca.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Animacions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A la majoria de comandes visuals de l'aplicació (vídeos, imatges, textos...)
 es permet un paràmetre opcional que definirà el que trigarà en arribar
 a l'objectiu demanat.
 Per exemple si volem moure i escalar un vídeo, podem posar al final de
 la comanda el símbol ~ i indicar un valor en segons de quant trigarà en
 fer l'animació.
 Aquests efectes tenen una animació anomenada EaseOutExpo, el que significa
 que segueixen una corba exponencial en el transcurs de l'animació.
 Per defecte seria lineal, però quedaria molt poc dinàmic i poc professional.
 Pel que s'ha optat per aquesta alternativa ja que es considera la més adequada
 pel tipus de clients i és molt atractiu.
 Tot això s'ha aconseguit gràcies a l'ajuda de un plugin molt famós de Unity
 anomenat LeanTween 
\begin_inset CommandInset citation
LatexCommand cite
key "LeanTween"
literal "false"

\end_inset

, desenvolupat per l'usuari 
\begin_inset Quotes fld
\end_inset

Dented Pixel
\begin_inset Quotes frd
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/DentedPixelLogo.png
	lyxscale 20
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Logo Dented Pixel
\begin_inset CommandInset label
LatexCommand label
name "fig:DentedPixel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es un 
\begin_inset Quotes fld
\end_inset

tweening engine
\begin_inset Quotes frd
\end_inset

 que permet fer càlculs intermedis per passar d'un valor a un altre, amb
 corbes d'animació totalment customitzables.
 Un exemple d'ús que es mostra a la seva documentació.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size tiny
LeanTween.moveX(gameObject, 1f, 1f).setEase(LeanTweenType.easeInQuad).setDelay(1f);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Transformacions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
\bar under
Posicions i escala
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
És molt probable que el modificador les posicions i escales dels vídeos
 serà de les funcionalitats més utilitzades i és un requisit indispensable.
 Aquest bloc es divideix en 3 comandes diferents:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Position
\end_layout

\begin_layout Standard
Es defineix un valor X i un valor Y compresos entre 0 i 1.
 Entenent com a 0,0 el punt superior esquerra de la pantalla.
 Es fa una conversió interna per passar dels valors de tant per 1, a un
 valor que representi la posició dins del motor de Unity.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/positionVideo.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Codi Posició | positionVideo.cs},label={Position}"

\end_inset


\end_layout

\begin_layout Standard
Per tant; la seva utilització és aquesta:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/positionDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Posició | positionReadme.md},label={PositionDocu}"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Scale
\end_layout

\begin_layout Standard
Es defineix un sol valor en el rang de 0 a 1 que indicarà l'escala (mida)
 desitjada.
 Només té un valor ja que no es contempla tenir vídeos deformats o de resolucion
s estranyes que no siguin amb un aspect ratio de 16:9.
\end_layout

\begin_layout Standard
La programació d'aquest bloc és bastant més senzilla ja que la conversió
 es directe, el Unity utilitza la mateixa mesura, valors de 0 a 1.
 Pel que un valor de 0.5 serà el 50% de la mida original.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/scaleVideo.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Codi Scale | scaleVideo.cs},label={Scale}"

\end_inset


\end_layout

\begin_layout Standard
La seva documentació corresponent és bastant semblant a la de posició.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/scaleDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Scale | scaleReadme.md},label={ScaleDocu}"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Poscale
\end_layout

\begin_layout Standard
Poscale és una comanda que fusiona les dues anteriors per poder fer les
 dues coses de cop, posicionar i escalar, el que permet poder sincronitzar
 més fàcilment l'animació de totes dues, a més d'un ús més còmode.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/poscaleDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Poscale | poscaleReadme.md},label={PoscaleDocu-1}"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\bar under
Colors i transparències
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
També es permet modificar la transparència del vídeo, per a fer-ho s'ha
 de modificar l'alpha del material del Unity.
 Aprofitant que es programa això, també es permetrà canviar el color del
 material en cas de desitjar-ho.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\series bold
Colors
\end_layout

\begin_layout Standard
Aquesta funció tenyirà d'un color el vídeo, per exemple si li indiquem un
 color vermell pur, es dibuixarà tot en escala de vermells.
 Es té en compte que potser no serà una funcionalitat molt utilitzada, però
 per algun cas específic pot ser bastant útil.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/colorsDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Colors | colorsReadme.md},label={ColorsDocu-1-1}"

\end_inset


\end_layout

\begin_layout Standard

\series bold
Transparències
\end_layout

\begin_layout Standard
Es permet canviar l'alpha dels vídeos per poder tenir-ne d'alguns superposats
 sobre altres.
 Això és molt útil i era un rels requisits indispensables, sobretot en imatges,
 del que es parlarà més endavant.
 Per aquesta funció també es permet crear una animació, que dóna un aspecte
 molt dinàmic i professional.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/TransparencyTest.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mostra de transparència
\begin_inset CommandInset label
LatexCommand label
name "fig:TransparencyTest"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per utilitzar-ho només cal seguir la següent nomenclatura:
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/alphaDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Transparències | alphaReadme.md},label={transparencyDocu}"

\end_inset


\end_layout

\begin_layout Standard
Encara que aquest efecte es pot aconseguir simplement modificant el valor
 alpha del material principal, pels objectes de vídeo, s'utilitza un shader
 propi anomenat com a Smart Material, que controlarà tot tipus d'efectes
 que se li demanin.
 És per això que només calen un parell de línies per aplicar-lo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/alphaVideo.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Codi Alpha | alphaVideo.cs},label={AlphaMaterial}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Layer Sorting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Layer Sorting o si traduïm literalment, ordenació de capes, és la funcionalitat
 que ens permet controlar les posicions en el eix de la Z, és a dir, el
 vector normal del pla de la càmera.
 Per aconseguir-ho, no s'ha fet només utilitzant la posició espacial, sinó
 que també s'ha fet ús de la tècnica de modificar el Z Buffer.
 En gràfics per ordinador, el z-buffering és el que s'encarrega de gestionar
 quins son els objectes que es renderitzen davant de la resta.
 La targeta gràfica fa un càlcul segons les posicions dels objectes i genera
 la imatge generada.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/z_buffer.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Representació Z-Buffer
\begin_inset CommandInset label
LatexCommand label
name "fig:Z-buffer"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En aquesta figura podem veure una representació d'aquest efecte, com més
 blanc sigui l'objecte, més prioritat tindrà a renderitzar-se, i per tant,
 més a sobre estarà de la resta d'objectes.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Z_buffer2.png
	lyxscale 20
	height 14cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparació Render i Z-Buffer
\begin_inset CommandInset label
LatexCommand label
name "fig:Z-buffer2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Entenen això doncs, i sabent que Unity proporciona un atribut del material
 anomenat 
\begin_inset Quotes fld
\end_inset

Render Queue
\begin_inset Quotes frd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "RenderQueue"
literal "false"

\end_inset

, podrem modificar al nostre gust el Z-Buffer i renderitzar un objecte que
 estigui molt lluny de la càmera abans que un que estigui més a prop, per
 exemple.
\end_layout

\begin_layout Standard
Per a utilitzar-ho, s'ha definit un sistema de capes, que va de 0 a infinit,
 entenent que com més gran sigui el número, menys prioritat tindrà a renderitzar
-se.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/layersortDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació LayerSort | layerSortReadme.md},label={layerSortDocu}"

\end_inset


\end_layout

\begin_layout Standard
Només caldrà indicar quin es el vídeo que es vol canviar de posició, i la
 capa destí.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La programació al Unity és molt intuïtiva, només caldrà agafar el material
 del render, i a la propietat renderQueue, assignar-li un valor.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
render.material.renderQueue = value;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Cropping}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El efecte de cropping vol dir retallar un vídeo.
 La forma més simple al retallar seria en forma rectangular.
 En aquesta aplicació, a més de poder retallar amb forma rectangular, utilitzant
 la potència i possibilitats de Unity podem retallar amb qualsevol tipus
 de forma gràcies als shaders.
 La manera d'utilitzar-ho serà aplicant una màscara que es compondrà de
 colors blancs (visible) i negres (no visible).
 Un color gris voldria dir que es veu lleugerament, pel que també ho podríem
 utilitzar per fer degradats d'opacitat.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/WCTCutout.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemple de màscara de crop
\begin_inset CommandInset label
LatexCommand label
name "fig:WCTCrop"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En aquesta figura tenim un exemple de màscara de cropping, aplicarem aquesta
 imatge al shader que s'ha creat anteriorment i farà l'efecte de crop.
 Per la mida i posició del crop, utilitzarem les propietats de Tiling i
 Offset del shader per modificar les UV de la imatge.
\end_layout

\begin_layout Standard
Doncs si posem un vídeo qualsevol a sobre d'un altre, i li apliquem aquest
 efecte amb la mateixa màscara mostrada abans, aconseguirem aquest resultat.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/CropExample.png
	lyxscale 20
	height 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat de Crop amb màscara WCT
\begin_inset CommandInset label
LatexCommand label
name "fig:WCTCropResultat"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per últim, comentar com s'ha fet la creació del shader.
 S'ha utilitzat l'eina de Unity ShaderGraph 
\begin_inset CommandInset citation
LatexCommand cite
key "ShaderGraph"
literal "false"

\end_inset

, que permet crear-ne sense necessitat de programar, el que ho fa bastant
 més senzill i intuïtiu.
 Utilitza un sistema de nodes, bastant inspirat en els blueprints de Unreal,
 però aquí resulta molt més útil, ja que la programació de shaders és baix
 nivell i no és gaire fàcil d'aprendre.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/CropShader.png
	lyxscale 20
	height 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Crop Shader Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:CropShaderGraph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Així queden els nodes per aconseguir el resultat de un material d'un vídeo
 amb una màscara.
 Al centre tenim el node de 
\begin_inset Quotes fld
\end_inset

Tiling and Offset
\begin_inset Quotes frd
\end_inset

 que permetrà moure la màscara en el pla.
 A aquest node li entra a 
\begin_inset Quotes fld
\end_inset

UV
\begin_inset Quotes frd
\end_inset

, la sortida del node de posició, que indica respecte a què ho haurem de
 moure, en aquest cas, respecte la posició global.
 Entra també el resultat de Tiling, al que se li ha de fer un processament
 previ, ja que el valor real segueix una corba logarítmica, haurem de dividir
 1 entre el valor real.
 I per últim també un Vector2 que serà el Offset.
 Tot això ho introduïm al valor de 
\begin_inset Quotes fld
\end_inset

UV
\begin_inset Quotes frd
\end_inset

 de la màscara i això crearà el desplaçament.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per últim, només caldrà multiplicar aquest resultat, amb l'Alpha de la textura
 original (Video), introduir-lo al material PBR resultant, i s'aconseguirà
 l'efecte.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La documentació corresponent per la seva utilització:
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/cropDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Cropping | cropReadme.md},label={cropDocu}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Outline and Shadows}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un altre efecte que s'ha creat, és l'anomenat 
\begin_inset Quotes fld
\end_inset

Outline and Shadows
\begin_inset Quotes frd
\end_inset

.
 Permet posar un marc d'un color sòlid a un vídeo, o una ombra.
 En la creació d'aquest efecte, s'ha fet un altre shader des de 0.
 S'ha seguit la tècnica per fer l'efecte de outline en un sprite d'un videojoc,
 ja que el crop podrà tenir diferents formes.
 L'usuari 
\begin_inset Quotes fld
\end_inset

CodeMonkey
\begin_inset Quotes frd
\end_inset

, que es dedica a fer tutorials de Unity, en va fer un dedicat a aquest
 efecte 
\begin_inset CommandInset citation
LatexCommand cite
key "CodeMonkeyOutline"
literal "false"

\end_inset

, que ha sigut molt útil per crear la base del nostre.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/OutlineShadow.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ombrejat en un vídeo amb Crop
\begin_inset CommandInset label
LatexCommand label
name "fig:ShadowCrop"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquí es pot veure la distribució resultant del shader.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/OutlineShader.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Outline Shader Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:OutlineShaderGraph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per utilitzar-ho hi ha moltes comandes i configuracions ja que és un shader
 molt complert, però un cop s'entengui el seu ús, pot ser molt útil.
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/outlineDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Outline | outlineReadme.md},label={outlineDocu}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Chroma Key}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El chroma és el millor efecte del que disposa l'aplicació, ja que no és
 gaire fàcil de fer a temps real depèn les eines que s'utilitzin, és per
 això que la competència no disposa d'aquest efecte.
 Era un repte molt important aconseguir-ho ja que marcarà la diferència.
 Per la seva realització, s'ha integrat dins el mateix shader del Smart
 Material creat anteriorment, això sí, utilitzant Sub-Shaders.
 Amb això es poden crear nodes propis que realitzin qualsevol funció.
 Resultant en un node de 
\begin_inset Quotes fld
\end_inset

Chroma
\begin_inset Quotes frd
\end_inset

 amb moltes entrades, que com a sortida té el color resultant del frame
 del vídeo, i la màscara d'alpha, que es pot combinar amb un Crop sense
 cap problema.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/ChromaShader.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Chroma Shader Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:ChromaShaderGraph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquest node conté 5 Sub-Graph, és a dir, 5 petits shaders que fan processaments
 intermedis per aconseguir el resultat final.
 Processos com poden ser toleràncies, conversions de rgb a un altre format,
 càlcul de difuminat de contorns, eliminació de restes de color verd (Despill),
 etc.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/SubShadersChroma.png
	lyxscale 20
	height 3cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sub Shaders Chroma
\begin_inset CommandInset label
LatexCommand label
name "fig:SubShadersChroma"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tot això resulta en uns quants atributs que poden ser modificats, que són:
\end_layout

\begin_layout Itemize
Key Color: Especifica el color a eliminar (per defecte verd pur rgb(0,1,0)).
\end_layout

\begin_layout Itemize
Threshold: El rang de color a eliminar partint del Key Color, per si hi
 ha ombres al color o la il·luminació no està del tot bé.
\end_layout

\begin_layout Itemize
Smoothness: Per aplicar un smooth al threshold i no apliqui una opacitat
 binària.
\end_layout

\begin_layout Itemize
Sharpen: El valor indica com d'afilat es vol el contorn.
\end_layout

\begin_layout Itemize
Mask Feather: Suavitzat de contorns.
\end_layout

\begin_layout Itemize
Despill: Defineix si es volen eliminar les restes de verd o no, i amb quina
 quantitat, 1 eliminarà tot el verd de la imatge, 0 ho deixarà igual.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
El chroma resultant és molt vàlid, i més tenint en compte que s'està processant
 en temps real.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/ChromaTest.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Chroma Test
\begin_inset CommandInset label
LatexCommand label
name "fig:ChromaTest"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Textos}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pels textos s'ha utilitzat el plugin de Unity TextMeshPro, que està inclòs
 per defecte a les últimes versions, ja que és molt superior al sistema
 de Textos que tenia anteriorment.
 Per defecte apareixen amb una animació de opacitat de 0 a 1, de 0.2 segons.
 Els paràmetres que es poden modificar són: canviar el text, canviar el
 pivot (permet ajustar millor Títols amb Subtítols entre altres), canviar
 la posició, opacitat, i destruir-los.
 Tot el que té a veure amb el format del text, es farà amb el propi sistema
 de TextMeshPro, que permet aplicar atributs d'una manera molt semblant
 a com es faria amb HTML, per exemple, la font, mida, color...
\end_layout

\begin_layout Standard
Concretament els atributs o 
\begin_inset Quotes fld
\end_inset

tags
\begin_inset Quotes frd
\end_inset

 com diuen a la seva documentació 
\begin_inset CommandInset citation
LatexCommand cite
key "TextMeshProDocu"
literal "false"

\end_inset

 són:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="25" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="5.5cm">
<column alignment="center" valignment="middle" width="5.5cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tags
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Efecte
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
align
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alineació de textos.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alpha, color
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Color i Opacitat
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
b, i
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Estils de negreta i cursiva
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cspace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Espaiat de textos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
font
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Font i selecció de materials
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ident
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sagnia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
line-height
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alçada de la línia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
link
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Assigna un ID
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lowercase, uppercase, smallcaps 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capitalització automàtica
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
margin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marges del text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mark
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marcar el text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mspace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monoespacial
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
noparse
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Evita parsejar els símbols antilambda
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nobr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elimina els espais entre línies
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
page
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Salt de pàgina
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Posició horitzontal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mida de la font
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
space
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Espai horitzontal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sprite
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Afegir sprites al text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s, u
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ratllat i subratllat
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
style
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Estils personalitzats
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sub, sup
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subíndex i superíndex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
voffset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Desplaçament de la línia base
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
width
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Amplada del text
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Atributs de TextMeshPro
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La documentació per inserir textos a l'aplicació segueix bastant la nomenclatura
 dels anteriors.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/textDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Text | textReadme.md},label={textDocu}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Imatges}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El sistema d'imatges funciona amb el component RawImage de Unity UI.
 No té gaire complicació, els requisits eren poder aplicar imatges de qualsevol
 format i possibilitat de transparència.
 Per descarregar la imatge, es comprova si es local o remota, i es descarrega
 utilitzant la llibreria UnityWebRequest, com ja es feia amb els àudios
 anteriorment (veure addAudio.cs 
\begin_inset CommandInset ref
LatexCommand ref
reference "AddAudio"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/addImage.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={Codi Image | addImage.cs},label={addImage}"

\end_inset


\end_layout

\begin_layout Standard
La utilització d'aquesta funció és molt intuïtiva i no requereix de gaire
 explicació.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/imageDocu.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={bash},caption={Documentació Image | imageReadme.md},label={imageDocu}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Scenes Management}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'aplicació permet guardar i carregar escenes personalitzades.
 Aquestes escenes s'emmagatzemen en fitxers binaris que s'entenen millor
 amb el Unity que els JSON 
\begin_inset CommandInset citation
LatexCommand cite
key "JSON vs Binary"
literal "false"

\end_inset

.
 El 
\begin_inset Quotes fld
\end_inset

SceneManager
\begin_inset Quotes frd
\end_inset

 es compon de 2 blocs, el bloc de save, i el de load.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El bloc de save, guarda parseja tots els objectes de l'escena, i els guarda
 en una classe pròpia anomenada Save Data que conté tots els camps necessaris
 a omplir per guardar l'escena.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/saveDataStruct.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={SaveDataStruct | saveData.cs},label={saveData}"

\end_inset


\end_layout

\begin_layout Standard
Guarda en llistes tots els vídeos, imatges, textos i background.
 Després formata tota l'estructura en un fitxer binari i el guarda al path
 per defecte de Unity.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/saveBinary.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={SaveBinary | saveBinary.cs},label={saveBinary}"

\end_inset


\end_layout

\begin_layout Standard
El bloc de càrrega, fa una mica el procés contrari, carrega el fitxer binari
 en una nova estructura SaveData.
 Passant per tots els elements de l'estructura, va executant totes les funcions
 pertinents per acabar obtenint el mateix resultat.
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/unityCode/loadData.txt"
lstparams "breaklines=true,captionpos=b,frame=tb,language={[Sharp]C},caption={LoadData | loadData.cs},label={loadData}"

\end_inset


\end_layout

\begin_layout Standard
A més, la transició entre aquestes escenes pot ser de diferent tipus.
 Actualment es permeten 2 estils.
 El primer seria el més bàsic, es fa a una fosa a negre, es carrega la següent
 escena, i un cop carregada, es fa visible la següent.
 L'altre fa un efecte de unes cortines que es tanquen, surt un logo, que
 pot ser el del client o qualsevol imatge, i un cop carregada la següent
 escena, s'obre de nou fent visible la nova distribució.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/TancantEscena.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tancant Escena
\begin_inset CommandInset label
LatexCommand label
name "fig:TancantEscena"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/EscenaTancada.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Escena Tancada
\begin_inset CommandInset label
LatexCommand label
name "fig:EscenaTancada"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/ObrintEscena.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Obrint Escena
\begin_inset CommandInset label
LatexCommand label
name "fig:ObrintEscena"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Debugging}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquesta secció està pensada pel desenvolupament de l'aplicació.
 Ja que quan s'utilitza l'aplicació compilada al servidor no es té una consola
 que mostri tot el log, s'ha integrat una consola que es mostra a sobre
 dels vídeos, per poder debugar més fàcilment.
 Només cal executar la crida debug=true per activar aquesta consola de desenvolu
pament.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
curl --data "debug=true" http://localhost:4444/ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un cop la tenim activada, tots els errors que passin al Unity aniran sortint
 per allà.
 A més també es disposa d'algunes comandes de control per rebre informació.
 Com pot ser retornar una llista amb totes els vídeos, imatges, textos i
 escenes disponibles.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
debug=listVideos
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/DebugTest.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Debug Console Test
\begin_inset CommandInset label
LatexCommand label
name "fig:DebugConsole"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A més, aquestes funcions de debug també es pot fer que retornin la resposta
 a través de terminal on fem les crides, si no volem que els vídeos quedin
 tapats per el debug.
 Això ho fem indicant la comanda 
\begin_inset Quotes fld
\end_inset

status
\begin_inset Quotes frd
\end_inset

 enlloc de 
\begin_inset Quotes fld
\end_inset

debug
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
curl --data "status=listVideos" http://localhost:4444/ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/StatusResponse.png
	lyxscale 20
	height 4cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Status Response
\begin_inset CommandInset label
LatexCommand label
name "fig:StatusResponse"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Sortida Aplicació}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsubsection{Video}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per la sortida de l'aplicació de Unity, s'utilitzarà FFmpeg, que capturarà
 un monitor virtual creat anteriorment.
 Per tant, els passos necessaris a fer son:
\end_layout

\begin_layout Standard
Crear un monitor virtual amb Xorg, que carregarà la configuració de l'arxiu
 xorg.conf
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
sudo Xorg :0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El següent pas serà executar el binari de Unity, que contindrà tot el projecte,
 amb la comanda
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Framed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
DISPLAY=:0 /home/wct/Builds/WCT.x86_64 -logFile ~/Logs/"$(date +"%Y_%m_%d_%I_%M_%
p").log"
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquesta comanda executarà l'arxiu WCT.x86_64 en el monitor virtual :0, que
 és el creat anteriorment amb Xorg :0.
 A més, generarà un arxiu de log, per poder tenir un seguiment dels problemes
 que puguin sorgir.
\end_layout

\begin_layout Standard
Per últim, s'haurà d'exportar el contingut del monitor a un flux RTMP o
 el que es desitgi.
 Hi ha moltes maneres de fer-ho, després de moltes proves, una de les més
 òptimes és la següent:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
firaCode
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Framed
position "c"
hor_pos "c"
has_inner_box 0
inner_pos "c"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.2pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size small
ffmpeg -y -f x11grab -draw_mouse 0 -s 1920x1080 -framerate 30 -async 1 -i
 :0.0+0,0 -f pulse -i default -pix_fmt yuv420p -c:v h264 -preset superfast
 -maxrate 4000k -bufsize 4000k -c:a aac -b:a 128k -f flv rtmp://output.com
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalfont
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection{Rendiments Màxims i Tests}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'aplicació s'executa a una màquina ec2 de AWS, concretament, la G4dn.xlarge.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/G4Machines.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Màquines G4
\begin_inset CommandInset label
LatexCommand label
name "fig:G4Machines"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Té 4 cores de CPU i una GPU Nvidia Tesla T4.
 És de les màquines més senzilles amb GPU, i ja ha donat uns resultats bastant
 sorprenents, pel que en el cas de necessitar més potència, no hi hauria
 cap problema en seleccionar una de més potent.
 Pel que s'ha aconseguit un dels resultats clau del projecte, escalabilitat.
 Això permet també oferir una amplia selecció de serveis amb diferents preus,
 per tal que un usuari que no necessiti tanta potència tingui un preu més
 baix i aconseguir uns preus atractius si es desitgés.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/ResultatScreen.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mostra Resultat Unity
\begin_inset CommandInset label
LatexCommand label
name "fig:ResultatFrame"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El processador acostuma estar en una càrrega de 60-80%, depenent del contingut
 que s'estigui reproduint.
 Tenint en compte que s'està ocupant del Unity i FFmpeg a la vegada.
 Es podria investigar per tenir la sortida de FFmpeg carregada a la GPU
 enlloc de tenir-la al processador.
 Però de moment els resultats ja han sigut òptims, pel que no és un canvi
 totalment necessari.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/ResultatHTOP.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Htop Unity i FFmpeg
\begin_inset CommandInset label
LatexCommand label
name "fig:ResultatHtop"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La GPU té una càrrega bastant variable, però de VRAM utilitza molt poca,
 potser es podria aprofitar tota aquesta VRAM per utilitzar-la en algun
 altre procés.
 S'hauria d'investigar i seria un treball d'optimització per si es vol aconsegui
r una càrrega més equilibrada del servidor.
 En tot cas com ja s'ha comentat, s'aconsegueixen uns rendiments òptims
 i es considera més important que no faltin recursos.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/unity/ResultatNVTOP.png
	lyxscale 20
	height 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
NVTOP Unity i FFmpeg
\begin_inset CommandInset label
LatexCommand label
name "fig:ResultatNVtop"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Conclusions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Amb aquest projecte s'ha descobert un món de possibilitats tant per mi,
 com per Watchity i el món audiovisual.
 S'han descobert molts aspectes del Unity que semblaven inviables d'ajuntar
 amb l'arquitectura del Mixer anterior, i que finalment amb molt esforç
 i estudi, s'ha aconseguit de manera òptima.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
S'ha aconseguit els objectius que es van definir, inclús s'han afegit algunes
 funcionalitats extres que han anat sorgint en el transcurs del desenvolupament.
 A més de la satisfacció extra de saber que el projecte tindrà una utilitat
 real a una empresa.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Veient el potencial que té, s'espera que aquestes tecnologies evolucionin
 fins a un punt on la televisió o el cine, utilitzi moltes tècniques dels
 videojocs.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
L'aplicació té molts punts forts, gràcies a les animacions aconseguides
 amb Unity, l'aspecte de les transicions i moviments són molt professionals.
 Té moltes possibilitats de textos, imatges, compatibilitat de vídeo, que
 fan que sigui molt diferencial a les altres opcions existents.
 L'ús és senzill, sobretot gràcies a l'API que s'ha desenvolupat al voltant
 del projecte, que permetrà calcular totes les posicions i moviments de
 forma automàtica, per a que si un usuari vol una escena no gaire complicada
 ho pugui fer amb uns pocs passos.
 I el que es considera el punt més fort i innovador, s'executa tot al núvol
 i no es requereix de molts recursos.
 Permetent que en un futur es pugui utilitzar inclús en dispositius mòbils
 o tablets.
 Un altre punt fort és que sigui remot, i la seva escalabilitat, permetent
 un servei personalitzat per a cada usuari, depenent de la complexitat de
 les escenes que es desitgi.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un aspecte dèbil del projecte, són els problemes que s'ha tingut de compatibilit
at entre Unity / Linux / Nvidia Drivers.
 Unity sí que té un software molt adaptat pel sistema operatiu utilitzat,
 encara que també s'ha d'entendre que no és el seu target principal.
 Per altre banda, Nvidia proporciona uns drivers que no són open-source,
 pel que ja trobarem moltes incompatibilitats i errors que només es podran
 solucionar si la companyia ho permet.
 Un exemple d'incompatibilitat és que els drivers propietaris de Nvidia
 no permeten l'ús de VA-API, una de les tecnologies més potents per acceleració
 de vídeo.
 Com es comenta no és del tot un impediment, sinó que és un obstacle molest,
 fàcil de solucionar, però que no depèn dels usuaris, sinó d'una empresa
 externa com és Nvidia.
 Pel que pot quedar com una línia de futur si decideixen fer algun canvi
 en aquest aspecte.
 Si en un futur Nvidia decidís alliberar el codi dels seus drivers, o com
 a mínim, donar més suport als usuaris de Linux, es podrien aconseguir uns
 resultats molt superiors a Windows, a més de totes les avantatges que Linux
 dona per a servidors.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Per concloure, cal destacar que aquest projecte té molt potencial i els
 objectius s'han aconseguit amb èxit.
 Per aquest motiu, s'ha decidit que el projecte segueix en desenvolupament
 per arribar a tenir una aplicació encara més sòlida i que es pugui posar
 a disposició dels usuaris de Watchity.
 El motor gràfic Unity està en constant evolució, pel que es preveu que
 cada cop es recolzi més la tecnologia audiovisual, el que permetrà que
 el projecte segueixi en constant evolució, sorprenent als usuaris en cada
 actualització.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Línies de futur}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A mida que s'anava desenvolupat el projecte, amb el descobriment del potencial
 que tenen aquestes tecnologies, , han anat sorgint noves idees per millorar
 i sobretot, innovar més en el món audiovisual.
 Alguns d'aquests punts que es realitzaran, o tenen la possibilitat de realitzar
-se en un futur són:
\end_layout

\begin_layout Itemize
Animacions de textos.
\end_layout

\begin_layout Itemize
Labels de textos i banners.
\end_layout

\begin_layout Itemize
Playlists de vídeos.
\end_layout

\begin_layout Itemize
Macro: possibilitat de emmagatzemar una seqüència de comandes, per reproduir-la
 més tard automàticament.
\end_layout

\begin_layout Itemize
Multi Output Audio: d'un mateix streaming, poder seleccionar entre un idioma
 o un altre, anant tota la informació pel mateix flux de dades.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
El projecte ha motivat molt a tothom que ha estat involucrat, i es seguirà
 desenvolupant per aconseguir arribar al màxim potencial que es pugui.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section{Referències Imatges}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Frontend-Mixer"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Watchity.
 (2019, September 9).
 Frontend Mixer [Graph].
 Frontend Mixer.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://help.watchity.com/hc/article_attachments/360027399494/Tipo_Production.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Selenium-Graph"
plural "false"
caps "false"
noprefix "false"

\end_inset

 SeleniumHQ.
 (2021, July 7).
 Selenium Driver Graph [Graph].
 Selenium Driver Graph.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.selenium.dev/documentation/images/basic_comms.png?width=400px
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:PupeteerLogo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 pupeteer.
 (2018, January 12).
 Pupeteer Logo [Graph].
 Logo.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-987
2-91d1fc2ea683.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:WebGLExample"
plural "false"
caps "false"
noprefix "false"

\end_inset

 WebGL Example.
 (2017, March 17).
 [Illustration].
 Aquarium.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://1stwebdesigner.com/wp-content/uploads/2014/03/aquarium.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:QuixelMegascans"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Quixel.
 (2019, March 20).
 Quixel Megascan [Render].
 UE4 Demo.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.youtube.com/watch?v=9fC20NWhx4s
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BlueprintRotate"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Spiris, S.
 (2014, December 25).
 Blueprint [Graph].
 UE4 Simple Blueprint.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://answers.unrealengine.com/storage/temp/24917-rotate90degrees.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BlueprintChaos"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Neginfinity, N.
 (2013, January 27).
 Chaos Blueprint [Graph].
 UE4 Blueprint Example of Bad Node Programming.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://forum.unity.com/proxy.php?image=https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FDeiyJrD
UwAAJQJ8.jpg&hash=f36b58c4bd4dc432a0a0ff8c62b453c4
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TiobeRanking"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Daria, D.
 (2021, July 12).
 Ranking Languages 2020 [Graph].
 Darly Solutions.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://darly.solutions/the-most-popular-programming-languages-in-2021/
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BookOfDead"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Unity.
 (2018, January 16).
 Book of the Dead - Unity Interactive Demo - Teaser.
 YouTube.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.youtube.com/watch?v=DDsRfbfnC_A
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EFTCaptura"
plural "false"
caps "false"
noprefix "false"

\end_inset

 BATTLESTATE GAMES LIMITED.
 (2015, December 22).
 Pantalla de Pre-Alfa 19.
 www.escapesfromtarkov.com.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.escapefromtarkov.com/media/id/29?lang=es
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DiagramaProtocol"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Aakanksha, A.
 (2016, May 12).
 Diagrama Protocol-Format-Códec [Graph].
 StreamShark.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://streamshark.io/blog/understanding-codecs-and-formats/
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TCPvsUDP"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Ruether, T.
 (2021, March 16).
 TCP vs UDP [Graph].
 Wowza.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.wowza.com/wp-content/uploads/Graphic-UDP-Vs-TCP-Diagram_1150x685.webp
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:LatencyGraph"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Ruether, T.
 (2021a, March 16).
 Graph Latency Streaming Protocols [Graph].
 Wowza.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.wowza.com/wp-content/uploads/latency-continuum-2021-with-protocols-700
x300-1.webp
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FFmpeg"
plural "false"
caps "false"
noprefix "false"

\end_inset

 FFmpeg.
 (2013, April 10).
 FFmpeg Logo [Logo].
 Wikipedia Media.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/FFmpeg_Logo_new.svg/1280p
x-FFmpeg_Logo_new.svg.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:VLC1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Brinkmann, M.
 (2009, July 7).
 VLC 1.0 [Photograph].
 Ghacks.Net.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.ghacks.net/2009/07/07/vlc-media-player-1-0-released/
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ExperimentHCEmpirical"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Pereyro, S.
 (2017, October 31).
 Screencast with Headless Chrome.
 Google Docs.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.google.com/presentation/d/1b-HvxKmeFYE3qoNDJDHfbgVwEbi0QgmTvpH8w4CK5T
w/edit#slide=id.gc6f90357f_0_0
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:HCTestindexhtml"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, March 9) Test Headless Chrome Index.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:NDIVLC"
plural "false"
caps "false"
noprefix "false"

\end_inset

 NewTek.
 (2016, August 31).
 NDI VLC Output Config [Config].
 NewTek.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.newtek.com/blog/tips/vlc-media-player-and-newtek-ndi-vlc-plugin/
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:NDIReceiver"
plural "false"
caps "false"
noprefix "false"

\end_inset

 NewTek.
 (2020b, November 20).
 NDI Receiver Unreal [Graph].
 NewTek.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRMEVIL0BGn1XzKBxR2VKpZowQagd
DYYENRmA&usqp=CAU
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:NDIReceiverResultat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, June 1) Test NDI Receiver.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UMPFunctions"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Unity Direction Kit.
 (2016a, June 4).
 UMP Functionalities [Graph].
 Asset Store.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://assetstorev1-prd-cdn.unity3d.com/key-image/9f96a930-72d3-4972-a650-f4ea4f6
e326b.webp
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ProvaUnity"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, January 14) Test Unity UMP.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AVProvsUMP"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, March 25) Test AVPro vs UMP.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:UMPvsAVPro"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, March 25) Test UMP vs AVPro.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CentOS"
plural "false"
caps "false"
noprefix "false"

\end_inset

 CentOS.
 (2015, December 12).
 CentOS [Logo].
 Wiki.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://upload.wikimedia.org/wikipedia/commons/thumb/b/bf/Centos-logo-light.svg/658
px-Centos-logo-light.svg.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Arquitectura"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, January 18) Esquema Arquitectura.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:XorgVSync"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, January 18) Exemple Bug Gràfic VSync.
 Own elaboration (Kingsman 2014).
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DentedPixel"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Dented Pixel.
 (2021, January 1).
 Dented Pixel [Logo].
 Twitter.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://pbs.twimg.com/profile_images/1470829398/LogoSquareLarge_400x400.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TransparencyTest"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, March 25) Esquema Arquitectura.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Z-buffer"
plural "false"
caps "false"
noprefix "false"

\end_inset

 rzeronte.
 (2020, January 2).
 Z-Buffer [Render].
 Brakeza.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://brakeza.com/wp-content/uploads/2020/01/z_buffer_penguins_image.png
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:WCTCrop"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 18) Crop WCT Màscara.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:WCTCropResultat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 18) Resultat Crop WCT.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CropShaderGraph"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 22) Crop Shader Graph.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ShadowCrop"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 22) Shadow.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:OutlineShaderGraph"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 22) Shadow.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ChromaShaderGraph"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, April 30) Chroma Node Shader Graph.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SubShadersChroma"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, April 30)Sub Shaders Chroma.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TancantEscena"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, April 19)Tancant Escena.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EscenaTancada"
plural "false"
caps "false"
noprefix "false"

\end_inset

Vicente A.
 (2021, April 19)Escena Tancada.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ObrintEscena"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, April 19)Obrint Escena.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DebugConsole"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 17)Debug Console.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:StatusResponse"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, February 17)Status Response.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:G4Machines"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Amazon Web Services.
 (2021, January 1).
 G4 Machines [Table].
 Table G4 Machines.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/es/ec2/instance-types/g4/
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ResultatFrame"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, June 05)Resultat Frame.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ResultatHtop"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, June 05)Resultat HTOP.
 Own elaboration.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align block
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ResultatNVtop"
plural "false"
caps "false"
noprefix "false"

\end_inset

 Vicente A.
 (2021, June 05)Resultat NVTOP.
 Own elaboration.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
sloppy
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ControlRoom"
literal "false"

\end_inset

Watchity.
 (2019b, September 13).
 ¿Qué es el Control Room (Live Distribution)? Watchity - Help Center.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://help.watchity.com/hc/es/articles/360017584293--Qu%C3%A9-es-el-Control-Room
-Live-Distribution-
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Cut&Share"
literal "false"

\end_inset

Watchity.
 (2020, July 8).
 Share cuts on Social Networks.
 Watchity - Help Center.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://help.watchity.com/hc/en-us/articles/360023619094-Share-cuts-on-Social-Netw
orks
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Mixer"
literal "false"

\end_inset

Watchity.
 (2019, September 9).
 ¿Qué es el Mixer? Watchity - Help Center.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://help.watchity.com/hc/es/articles/360018866273--Qu%C3%A9-es-el-Mixer-
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "HeadlessChromeExp1"
literal "false"

\end_inset

Pereyro, S.
 (2018, February 09).
 Live streaming with headless chrome - Empirical.
 Empirical.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://blog.goempirical.com/how-to-use-headless-chrome-to-screencast-audio-and-vi
deo-to-an-rtmp-endpoint-216ccfdde4db
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "PulseAudio"
literal "false"

\end_inset

FreeDesktop.
 (2021, January 16).
 PulseAudio.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.freedesktop.org/wiki/Software/PulseAudio/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "HeadlessChromeDevel"
literal "false"

\end_inset

Google.
 (2021, February 25).
 Getting Started with Headless Chrome | Web |.
 Google Developers.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://developers.google.com/web/updates/2017/04/headless-chrome
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Selenium"
literal "false"

\end_inset

SeleniumHQ.
 (2018, December 19).
 SeleniumHQ Browser Automation.
 Selenium.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.selenium.dev/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "SeleniumDriverDocumentation"
literal "false"

\end_inset

SeleniumHQ.
 (2021a, July 7).
 Driver requirements :: Documentation for Selenium.
 Documentació Selenium.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.selenium.dev/documentation/en/webdriver/driver_requirements/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "SeleniumHeadlessChrome"
literal "false"

\end_inset

Smirnov, A.
 (2020, November 18).
 How to run a headless Chrome browser in Selenium WebDriver.
 Medium.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://itnext.io/how-to-run-a-headless-chrome-browser-in-selenium-webdriver-c552
1bc12bf0
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Puppeteer"
literal "false"

\end_inset

Google.
 (2021a, February 11).
 Puppeteer | Tools for Web Developers |.
 Google Developers.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://developers.google.com/web/tools/puppeteer
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ApacheLicense"
literal "false"

\end_inset

Apache.
 (2004, January 1).
 Apache License, Version 2.0.
 Apache License.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.apache.org/licenses/LICENSE-2.0
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WebGLBrowserSupport"
literal "false"

\end_inset

Mozilla.
 (2021, May 27).
 WebGL: 2D and 3D graphics for the web - Web APIs | MDN.
 WebGL Support by Browser.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API#browser_compatibility
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "UE4BestPhotoEngine"
literal "false"

\end_inset

Dealessandri, M.
 (2020, May 14).
 What is the best game engine: is Unreal Engine right for you? GamesIndustry.Biz.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.gamesindustry.biz/articles/2020-01-16-what-is-the-best-game-engine-is-
unreal-engine-4-the-right-game-engine-for-you
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "PopularUnity"
literal "false"

\end_inset

Eric Peckham, E.
 P.
 (2019, October 17).
 TechCrunch is now a part of Verizon Media.
 Extra Crunch.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://techcrunch.com/2019/10/17/how-unity-built-the-worlds-most-popular-game-en
gine/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "UnityMultiplatform"
literal "false"

\end_inset

Technologies, U.
 (2021, January 1).
 Multiplatform.
 Unity.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://unity.com/features/multiplatform
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "TIOBE"
literal "false"

\end_inset

TIOBE.
 (2021, July 1).
 index | TIOBE - The Software Quality Company.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.tiobe.com/tiobe-index/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "MonoBehaviour"
literal "false"

\end_inset

Technologies, U.
 (2021b, January 1).
 Unity - Scripting API: MonoBehaviour.
 Unity.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.unity3d.com/ScriptReference/MonoBehaviour.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "HDRP"
literal "false"

\end_inset

Lagarde, S.
 (2020, February 24).
 HDRP: Out of Preview in 2019.3.
 Unity Blog.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://blog.unity.com/technology/hdrp-out-of-preview-in-2019-3
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "DivX"
literal "false"

\end_inset

Texto: Luz Fernández.
 (2002, December 28).
 La copia de películas se hace fácil en Internet.
 Cinco Días.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://cincodias.elpais.com/cincodias/2002/12/28/tecnologia/1041322677_850215.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "StreamingProtocols"
literal "false"

\end_inset

Bychok, A.
 (2021, May 21).
 Streaming Protocol Comparison: RTMP, WebRTC, FTL, SRT – Restream Blog.
 Ultimate Live Streaming Hub – Restream Blog.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://restream.io/blog/streaming-protocols/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AV1Codec"
literal "false"

\end_inset

Fernández, Y.
 (2019, November 7).
 Qué es el códec AV1 y cuáles son sus ventajas.
 Xataka.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.xataka.com/basics/que-codec-av1-cuales-sus-ventajas
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "MixerFTL"
literal "false"

\end_inset

Hao, D.
 T.
 G.
 (2019, August 7).
 Mixer’s Faster Than Light streaming protocol explained.
 Dot Esports.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://dotesports.com/streaming/news/mixers-faster-than-light-streaming-protocol
-explained
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "MixerCierre"
literal "false"

\end_inset

Rus, C.
 (2020, June 23).
 Microsoft cierra Mixer, su alternativa a Twitch en la que tenía en exclusiva
 a superestrellas de eSports como.
 .
 .
 Xataka.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.xataka.com/videojuegos/microsoft-cierra-mixer-su-alternativa-a-twitch-
que-tenia-exclusiva-a-superestrellas-esports-como-ninja
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "TwtichRTMP"
literal "false"

\end_inset

Twitch.
 (2015, December 18).
 Twitch Blog | Twitch Engineering: An Introduction and Overview.
 Twitch Blog.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://blog.twitch.tv/en/2015/12/18/twitch-engineering-an-introduction-and-overvi
ew-a23917b71a25/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "FFmpeg About"
literal "false"

\end_inset

FFmpeg.
 (2021, January 1).
 About FFmpeg.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://ffmpeg.org/about.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "FFmpeg Filters"
literal "false"

\end_inset

FFmpeg.
 (2021b, January 1).
 FFmpeg Filters Documentation.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://ffmpeg.org/ffmpeg-filters.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "VideoLAN"
literal "false"

\end_inset

VideoLAN.
 (2021, January 1).
 Free Software and Open Source video streaming solution for every OS! -
 VideoLAN.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.videolan.org/videolan/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "VideoLAN Contribution"
literal "false"

\end_inset

VideoLAN.
 (2021a, January 1).
 Contribute to the project - VideoLAN.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.videolan.org/contribute.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "libVLCSampleCode"
literal "false"

\end_inset

VideoLAN.
 (2019, March 4).
 libVLC Tutorial - VideoLAN Wiki.
 WikiVLC.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://wiki.videolan.org/LibVLC_Tutorial/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "HeadlessChromeProject"
literal "false"

\end_inset

Pereyro, S.
 (2017, October 31).
 Screencast with Headless Chrome.
 Google Docs.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.google.com/presentation/d/1b-HvxKmeFYE3qoNDJDHfbgVwEbi0QgmTvpH8w4CK5T
w/edit#slide=id.gc6f90357f_0_0
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Postman"
literal "false"

\end_inset

Postman.
 (2021, January 1).
 Postman | The Collaboration Platform for API Development.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.postman.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ChromeDevTools"
literal "false"

\end_inset

Google.
 (2021a, January 1).
 Chrome DevTools Protocol.
 Page Domain.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-startScreencas
t
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Nightcrawler"
literal "false"

\end_inset

Filmaffinity.
 (2014, January 1).
 Nightcrawler (2014).
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.filmaffinity.com/es/film779937.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Stalker"
literal "false"

\end_inset

Filmaffinity.
 (1979, January 1).
 Stalker (1979).
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.filmaffinity.com/es/film534365.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AutoplayPolicy"
literal "false"

\end_inset

Google.
 (2017, September 13).
 Autoplay policy in Chrome.
 Chrome Developers.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://developer.chrome.com/blog/autoplay/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "FFmpegPatternType"
literal "false"

\end_inset

FFmpeg.
 (2021c, January 1).
 FFmpeg Formats Documentation.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://ffmpeg.org/ffmpeg-formats.html#image2-1
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "FBSamplesRepo"
literal "false"

\end_inset

FBSamples.
 (2020, May 8).
 GitHub - fbsamples/Canvas-Streaming-Example: This project contains example
 code showing how to go live on Facebook using a element as a source.
 GitHub.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/fbsamples/Canvas-Streaming-Example
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "NewTekNDI"
literal "false"

\end_inset

NewTek.
 (2021, January 1).
 About NDI - Network Device Interface.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.ndi.tv/about-ndi/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "NDI Unreal Documentation"
literal "false"

\end_inset

NewTek.
 (2020, November).
 NDI Unreal Documentation.
 NDI Unreal Documentation.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://514f211588de67e4fdcf-437b8dd50f60b69cf0974b538e50585b.r63.cf1.rackcdn.com/Uti
lities/SDK/NDI_SDK_Unreal_Engine/4.25/NDI%20IO%20Plugin%20for%20Unreal%20Engine%2
0Quickstart%20Guide.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "UMP Plugin"
literal "false"

\end_inset

Unity Direction Kit.
 (2016, June 4).
 UMP (Win, Mac, Linux, WebGL) | Video.
 Unity Asset Store.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://assetstore.unity.com/packages/tools/video/ump-win-mac-linux-webgl-49625
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Cloud Linux"
literal "false"

\end_inset

Verma, A.
 (2015, August 30).
 Access denied | fossbytes.com used Cloudflare to restrict access.
 Fossbytes.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://fossbytes.com/ubuntu-linux-is-the-most-popular-operating-system-in-cloud/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AVPro"
literal "false"

\end_inset

RenderHeadsLTD.
 (2020, March 12).
 AVPro Video - Ultra Edition | Video.
 Unity Asset Store.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://assetstore.unity.com/packages/tools/video/avpro-video-ultra-edition-184294
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "FFmpegOut"
literal "false"

\end_inset

Keijiro, K.
 (2019, October 24).
 GitHub - keijiro/FFmpegOut: Video capture plugin for Unity with FFmpeg.
 GitHub.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/keijiro/FFmpegOut
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Vulkan"
literal "false"

\end_inset

AMD.
 (2016, February 16).
 Vulkan.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.amd.com/es/technologies/vulkan
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AWS"
literal "false"

\end_inset

Amazon.
 (2021, January 1).
 AWS | Cloud Computing - Servicios de informática en la nube.
 Amazon Web Services, Inc.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/es/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AWSvsAzure"
literal "false"

\end_inset

AWS vs Azure-Who is the big winner in the cloud war? (2021, July 27).
 ProjectPro.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.dezyre.com/article/aws-vs-azure-who-is-the-big-winner-in-the-cloud-war
/401
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "HDRGuia"
literal "false"

\end_inset

López, J.
 C.
 (2019, February 20).
 La biblia del HDR: qué es, cuáles son los estándares actuales y cómo no
 todo lo que dicen que es HDR lo es en.
 .
 .
 Xataka.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.xataka.com/televisores/biblia-hdr-que-cuales-estandares-actuales-como-
no-todo-que-dicen-que-hdr-efectivamente
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "LeanTween"
literal "false"

\end_inset

Unity.
 (2014, August 11).
 LeanTween | Animation Tools.
 Unity Asset Store.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://assetstore.unity.com/packages/tools/animation/leantween-3595
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "RenderQueue"
literal "false"

\end_inset

Technologies, U.
 (2020, January 25).
 Unity - Scripting API: RenderQueue.
 Unity3d.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.unity3d.com/ScriptReference/Rendering.RenderQueue.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ShaderGraph"
literal "false"

\end_inset

Technologies, U.
 (2021, January 1).
 Shader Graph | Crea tus shaders visualmente con.
 Unity.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://unity.com/es/shader-graph
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "CodeMonkeyOutline"
literal "false"

\end_inset

CodeMonkey.
 (2019, November 24).
 Code Monkey - Sprite Outline - 2D Shader Graph Tutorial.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://unitycodemonkey.com/video.php?v=FvQFhkS90nI
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "TextMeshProDocu"
literal "false"

\end_inset

Digital Native Studios.
 (2021, January 1).
 Rich Text, TextMesh Pro Documentation.
 TextMeshPro.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://digitalnativestudios.com/textmeshpro/docs/rich-text/#style
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "JSON vs Binary"
literal "false"

\end_inset

Harald, H.
 (2020, January 1).
 JSON VS Binary.
 Esoteric Software.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://es.esotericsoftware.com/forum/JSON-VS-Binary-13339
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{document}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
